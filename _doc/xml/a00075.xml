<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="a00075" kind="file">
    <compoundname>commonFunctions.cpp</compoundname>
    <includes refid="a00076" local="yes">commonFunctions.h</includes>
    <incdepgraph>
      <node id="606">
        <label>mtrand.h</label>
        <link refid="a00091"/>
      </node>
      <node id="602">
        <label>cmath</label>
      </node>
      <node id="597">
        <label>string</label>
      </node>
      <node id="593">
        <label>acs_headers.h</label>
        <link refid="a00072"/>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
      <node id="596">
        <label>fstream</label>
      </node>
      <node id="591">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp</label>
        <link refid="commonFunctions.cpp"/>
        <childnode refid="592" relation="include">
        </childnode>
      </node>
      <node id="605">
        <label>ctime</label>
      </node>
      <node id="592">
        <label>commonFunctions.h</label>
        <link refid="a00076"/>
        <childnode refid="593" relation="include">
        </childnode>
      </node>
      <node id="600">
        <label>vector</label>
      </node>
      <node id="599">
        <label>sstream</label>
      </node>
      <node id="603">
        <label>cstdlib</label>
      </node>
      <node id="604">
        <label>clocale</label>
      </node>
      <node id="595">
        <label>iostream</label>
      </node>
      <node id="601">
        <label>deque</label>
      </node>
      <node id="594">
        <label>stdio.h</label>
      </node>
      <node id="598">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00075_1aa6403f90846f5fb19fcfb8b81aeee73c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
        <definition>acs_longInt returnSelectionIdFromAWeightProbVector</definition>
        <argsstring>(acs_double *tmpArray, MTRand &amp;tmpRandomGenerator, acs_int tmpRow)</argsstring>
        <name>returnSelectionIdFromAWeightProbVector</name>
        <param>
          <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref> *</type>
          <declname>tmpArray</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <param>
          <type><ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref></type>
          <declname>tmpRow</declname>
        </param>
        <briefdescription>
<para>This funtion returns a random position in a probability weight array of N elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="15" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="15" bodyend="31"/>
        <references refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" compoundref="a00045" startline="482">acsSCCanalysis.position</references>
        <referencedby refid="a00014_1a90fba3b2cc589f32c97a74540620bd84" compoundref="a00085" startline="2668" endline="3280">environment::performOPTGillespieComputation</referencedby>
        <referencedby refid="a00014_1a6ae793f9d2dca0632239be955dd83cee" compoundref="a00085" startline="3809" endline="3928">environment::performDETComplexDissociation</referencedby>
        <referencedby refid="a00014_1adbaf165a12edd62c614a455544807ea3" compoundref="a00085" startline="3937" endline="4168">environment::performDETMoleculesCharging</referencedby>
        <referencedby refid="a00014_1acbbcdb4c77231e9ffa4c169e0caa0d0c" compoundref="a00085" startline="4369" endline="4521">environment::performMoleculesEfflux</referencedby>
        <referencedby refid="a00014_1a4fe7891fb38f3f25bb82769af0ddfe19" compoundref="a00085" startline="5851" endline="6012">environment::newSpeciesEvaluationIII</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1a308bfda14afb58f5ffa8b872c8bcc64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
        <definition>acs_longInt returnSelectionIdFromAWeightProbVector</definition>
        <argsstring>(vector&lt; acs_double &gt; &amp;tmpVector, acs_double tmpMaxValue, MTRand &amp;tmpRandomGenerator, acs_int tmpRow)</argsstring>
        <name>returnSelectionIdFromAWeightProbVector</name>
        <param>
          <type>vector&lt; <ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref> &gt; &amp;</type>
          <declname>tmpVector</declname>
        </param>
        <param>
          <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
          <declname>tmpMaxValue</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <param>
          <type><ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref></type>
          <declname>tmpRow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return position of a randomly selected element from a vector containing cumulative values for each element <simplesect kind="version"><para>1.0 </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector&lt;acs_double&gt;&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>tmpVector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acs_double</parametername>
</parameternamelist>
<parameterdescription>
<para>MAX VALUE contained within the QList (being a cumulative list this is the last value) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MTRand&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>tmpRandomGenerator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="40" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="40" bodyend="64"/>
        <references refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" compoundref="a00045" startline="482">acsSCCanalysis.position</references>
        <references refid="a00075_1aa678d0a98232158c48108227b98de4b6" compoundref="a00075" startline="269" endline="274">ExitWithError</references>
      </memberdef>
      <memberdef kind="function" id="a00075_1a4135ff15fd24eb8fbfee3d00e1cfbf20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
        <definition>acs_longInt returnSelectionIdFromAWeightProbVectorAlreadyNormalized</definition>
        <argsstring>(vector&lt; acs_double &gt; &amp;tmpVector, MTRand &amp;tmpRandomGenerator)</argsstring>
        <name>returnSelectionIdFromAWeightProbVectorAlreadyNormalized</name>
        <param>
          <type>vector&lt; <ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref> &gt; &amp;</type>
          <declname>tmpVector</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return position of a randomly selected element from a normalized vector containing cumulative values for each element <simplesect kind="version"><para>1.0 </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector&lt;acs_double&gt;&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>tmpQList </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MTRand&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>tmpRandomGenerator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="72" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="72" bodyend="116"/>
        <references refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" compoundref="a00045" startline="482">acsSCCanalysis.position</references>
        <references refid="a00075_1aa678d0a98232158c48108227b98de4b6" compoundref="a00075" startline="269" endline="274">ExitWithError</references>
        <referencedby refid="a00014_1a76794f37d6d94b7504c58f0f4a4709ca" compoundref="a00085" startline="525" endline="930">environment::createReactionsForThisSpecies</referencedby>
        <referencedby refid="a00014_1ace92235425bfbe692e3873ba5bb07639" compoundref="a00085" startline="941" endline="1219">environment::updateReactions</referencedby>
        <referencedby refid="a00014_1a8a53821ad1675b0da50591616aac3b74" compoundref="a00085" startline="3718" endline="3800">environment::performRefill</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1a1cb9cc6ac8ec2ef62b8eb1970e73a11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
        <definition>acs_longInt returnUniformSelection_LONG_IdFromVector</definition>
        <argsstring>(vector&lt; acs_longInt &gt; &amp;tmpVector, MTRand &amp;tmpRandomGenerator)</argsstring>
        <name>returnUniformSelection_LONG_IdFromVector</name>
        <param>
          <type>vector&lt; <ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref> &gt; &amp;</type>
          <declname>tmpVector</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return position of a LONG INT randomly selected element from a normalized vector containing cumulative values for each element <simplesect kind="version"><para>1.0 </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector&lt;acs_double&gt;&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>tmpVector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MTRand&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>tmpRandomGenerator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="124" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="124" bodyend="129"/>
        <references refid="a00075_1a6d28311eff309499e66efb5d39a035f4" compoundref="a00075" startline="131" endline="149">getIntRandom</references>
        <referencedby refid="a00014_1a76794f37d6d94b7504c58f0f4a4709ca" compoundref="a00085" startline="525" endline="930">environment::createReactionsForThisSpecies</referencedby>
        <referencedby refid="a00014_1ace92235425bfbe692e3873ba5bb07639" compoundref="a00085" startline="941" endline="1219">environment::updateReactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1a6d28311eff309499e66efb5d39a035f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
        <definition>acs_longInt getIntRandom</definition>
        <argsstring>(acs_longInt tmpFromNum, acs_longInt tmpToNum, MTRand &amp;tmpRandomGenerator)</argsstring>
        <name>getIntRandom</name>
        <param>
          <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
          <declname>tmpFromNum</declname>
        </param>
        <param>
          <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
          <declname>tmpToNum</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="131" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="131" bodyend="149"/>
        <referencedby refid="a00076_1a1cb9cc6ac8ec2ef62b8eb1970e73a11b" compoundref="a00075" startline="124" endline="129">returnUniformSelection_LONG_IdFromVector</referencedby>
        <referencedby refid="a00014_1a76794f37d6d94b7504c58f0f4a4709ca" compoundref="a00085" startline="525" endline="930">environment::createReactionsForThisSpecies</referencedby>
        <referencedby refid="a00014_1ace92235425bfbe692e3873ba5bb07639" compoundref="a00085" startline="941" endline="1219">environment::updateReactions</referencedby>
        <referencedby refid="a00014_1a4fe7891fb38f3f25bb82769af0ddfe19" compoundref="a00085" startline="5851" endline="6012">environment::newSpeciesEvaluationIII</referencedby>
        <referencedby refid="a00022_1a59cb623199b038029a7d63a720408cf5" compoundref="a00094" startline="228" endline="260">species::species</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1aed308af1d3ee40e106e4e23e78644d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
        <definition>acs_double getDoubleRandom</definition>
        <argsstring>(acs_double tmpFromNum, acs_double tmpToNum, MTRand &amp;tmpRandomGenerator)</argsstring>
        <name>getDoubleRandom</name>
        <param>
          <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
          <declname>tmpFromNum</declname>
        </param>
        <param>
          <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
          <declname>tmpToNum</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="151" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="151" bodyend="178"/>
        <referencedby refid="a00022_1a59cb623199b038029a7d63a720408cf5" compoundref="a00094" startline="228" endline="260">species::species</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1a22cddb6ffcf2250e0c90bc913728350f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
        <definition>acs_longInt random_poisson</definition>
        <argsstring>(acs_double tmpLambda, MTRand &amp;tmpRandomGenerator)</argsstring>
        <name>random_poisson</name>
        <param>
          <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
          <declname>tmpLambda</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to return a number from a poisson random distribution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="183" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="183" bodyend="198"/>
        <references refid="a00028_1aa2b4c35904308d35fc5d606a429e608d" compoundref="a00028" startline="675">p</references>
        <references refid="a00025_1ab7005e24e9bb6ea9b6e14c4ac2614a31" compoundref="a00025" startline="186">k</references>
      </memberdef>
      <memberdef kind="function" id="a00075_1a78d5b4a67b6e66b8ceaa85874a2a12b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
        <definition>acs_longInt random_binomial</definition>
        <argsstring>(acs_longInt n, acs_double tmpP, MTRand &amp;tmpRandomGenerator)</argsstring>
        <name>random_binomial</name>
        <param>
          <type><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
          <declname>tmpP</declname>
        </param>
        <param>
          <type><ref refid="a00016" kindref="compound">MTRand</ref> &amp;</type>
          <declname>tmpRandomGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to return a number from a binomial distribution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="203" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="203" bodyend="224"/>
        <references refid="a00025_1ab7005e24e9bb6ea9b6e14c4ac2614a31" compoundref="a00025" startline="186">k</references>
        <references refid="a00027_1a1de1a45bc56b002aa1ad94bb5f54a1ca" compoundref="a00027" startline="76">i</references>
        <referencedby refid="a00014_1a0fd3cb062d35d2f6dd8961e95dd477b7" compoundref="a00085" startline="481" endline="512">environment::computeSngSpeciesRctsNumber</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1a277c801cb0f8a290d7c28b6a67feff18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
        <definition>acs_double acsround</definition>
        <argsstring>(acs_double tmpX)</argsstring>
        <name>acsround</name>
        <param>
          <type><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref></type>
          <declname>tmpX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to round double numbers in integers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="229" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="229" bodyend="235"/>
        <referencedby refid="a00014_1a8a53821ad1675b0da50591616aac3b74" compoundref="a00085" startline="3718" endline="3800">environment::performRefill</referencedby>
        <referencedby refid="a00022_1a9842732a5dbe0eb67e24148b5d7ae4a2" compoundref="a00095" startline="136" endline="136">species::concToNum</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1a1a13653eb649b6fc74090deecddf1028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string dec2bin</definition>
        <argsstring>(acs_int tmpInt)</argsstring>
        <name>dec2bin</name>
        <param>
          <type><ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref></type>
          <declname>tmpInt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to convert a decimal number in a binary string composed of 12 bit such Example -&gt; input: 10, binary 1010 <ndash/>&gt; 000000001010 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="241" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="241" bodyend="263"/>
        <references refid="a00062_1ae113ea7f9e515a12ac4b5595c6faf61e">size</references>
        <references refid="a00025_1a230414213a9710ed03b6cf8d2695ee94" compoundref="a00025" startline="149">a</references>
        <referencedby refid="a00014_1a90fba3b2cc589f32c97a74540620bd84" compoundref="a00085" startline="2668" endline="3280">environment::performOPTGillespieComputation</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1aa678d0a98232158c48108227b98de4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExitWithError</definition>
        <argsstring>(string strFunctionName, string strError)</argsstring>
        <name>ExitWithError</name>
        <param>
          <type>string</type>
          <declname>strFunctionName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>strError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to close the program after having en error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="269" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="269" bodyend="274"/>
        <referencedby refid="a00012_1ab6af429c051e2bc9756bac72b99cc4ce" compoundref="a00073" startline="19" endline="43">catalysis::catalysis</referencedby>
        <referencedby refid="a00076_1ae4d6f026d5445b877a52e326fd95a081" compoundref="a00075" startline="40" endline="64">returnSelectionIdFromAWeightProbVector</referencedby>
        <referencedby refid="a00076_1a4135ff15fd24eb8fbfee3d00e1cfbf20" compoundref="a00075" startline="72" endline="116">returnSelectionIdFromAWeightProbVectorAlreadyNormalized</referencedby>
        <referencedby refid="a00014_1aa44bbabec52bf2d61a19685a30e68de1" compoundref="a00085" startline="80" endline="197">environment::environment</referencedby>
        <referencedby refid="a00014_1a76794f37d6d94b7504c58f0f4a4709ca" compoundref="a00085" startline="525" endline="930">environment::createReactionsForThisSpecies</referencedby>
        <referencedby refid="a00014_1ace92235425bfbe692e3873ba5bb07639" compoundref="a00085" startline="941" endline="1219">environment::updateReactions</referencedby>
        <referencedby refid="a00014_1aee77384e63261db28ef5677844bdbaf6" compoundref="a00085" startline="1249" endline="1331">environment::createInitialMoleculesPopulationFromFileSTD</referencedby>
        <referencedby refid="a00014_1aa70e1394bf2240f6e5f14d4cbf369a3b" compoundref="a00085" startline="1478" endline="1564">environment::createInitialMoleculesPopulationFromSpecificFileSTD</referencedby>
        <referencedby refid="a00014_1a6606b08f25751a8796c13810962b385e" compoundref="a00085" startline="2004" endline="2454">environment::structureCoherenceCheckUp</referencedby>
        <referencedby refid="a00014_1a5160dec152ed0369fe8af9aff3253a9e" compoundref="a00085" startline="2578" endline="2623">environment::notInverseReactionAlreadyCatalyzed</referencedby>
        <referencedby refid="a00014_1ad3ebcd7ab1c9ba1a0f65b264b97adf33" compoundref="a00085" startline="2635" endline="2655">environment::checkAvailability</referencedby>
        <referencedby refid="a00014_1a90fba3b2cc589f32c97a74540620bd84" compoundref="a00085" startline="2668" endline="3280">environment::performOPTGillespieComputation</referencedby>
        <referencedby refid="a00014_1a30a0827eed2860d03d5fa5318fcf86b0" compoundref="a00085" startline="3314" endline="3478">environment::performSingleGilleSpieIntroduction</referencedby>
        <referencedby refid="a00014_1a6ae793f9d2dca0632239be955dd83cee" compoundref="a00085" startline="3809" endline="3928">environment::performDETComplexDissociation</referencedby>
        <referencedby refid="a00014_1adbaf165a12edd62c614a455544807ea3" compoundref="a00085" startline="3937" endline="4168">environment::performDETMoleculesCharging</referencedby>
        <referencedby refid="a00014_1aa4830018af0b99eddefcdefad877b305" compoundref="a00085" startline="4265" endline="4304">environment::removeChargeMolFromList</referencedby>
        <referencedby refid="a00014_1a7981c34d16c0b1e9e6ca3ea69aa3a8a3" compoundref="a00085" startline="4313" endline="4360">environment::addChargeMolToList</referencedby>
        <referencedby refid="a00014_1acbbcdb4c77231e9ffa4c169e0caa0d0c" compoundref="a00085" startline="4369" endline="4521">environment::performMoleculesEfflux</referencedby>
        <referencedby refid="a00014_1ad072a40a7d9521379c7ff50ed8110fbe" compoundref="a00085" startline="4531" endline="4602">environment::performMoleculeEfflux</referencedby>
        <referencedby refid="a00014_1aff7607e0f3a74790109a7d87de3031bd" compoundref="a00085" startline="4611" endline="4655">environment::performEnergyEfflux</referencedby>
        <referencedby refid="a00014_1a1db4e67ba458a54f4fab3e10a203765c" compoundref="a00085" startline="4668" endline="4887">environment::performReaction</referencedby>
        <referencedby refid="a00014_1a1baf5512b7e0a8fb6f8f890ba9f99cd1" compoundref="a00085" startline="4898" endline="5001">environment::performCondensation</referencedby>
        <referencedby refid="a00014_1aa7a2cc95d8ba242c805a8fda063b23a7" compoundref="a00085" startline="5015" endline="5138">environment::perform_endo_Condensation</referencedby>
        <referencedby refid="a00014_1aa4ed307a123c402166cfc7f6ed99043a" compoundref="a00085" startline="5151" endline="5244">environment::performCleavage</referencedby>
        <referencedby refid="a00014_1ade26b82a3b48a5bda7e5751cbfd31b04" compoundref="a00085" startline="5258" endline="5368">environment::perform_endo_Cleavage</referencedby>
        <referencedby refid="a00014_1aaf4f4f6be28edb182d2a2516c9394f9b" compoundref="a00085" startline="5379" endline="5457">environment::performComplexFormation</referencedby>
        <referencedby refid="a00014_1ae942db2453c56b60250a5d43452b91a5" compoundref="a00085" startline="5467" endline="5553">environment::perform_endo_ComplexFormation</referencedby>
        <referencedby refid="a00014_1a5c5e57b0558067cbf55c894f33d0a121" compoundref="a00085" startline="5565" endline="5648">environment::performComplexDissociation</referencedby>
        <referencedby refid="a00014_1a4949138a3771b7f6ec2bfe82cbad947e" compoundref="a00085" startline="5657" endline="5718">environment::performSpontaneousCleavage</referencedby>
        <referencedby refid="a00014_1acc764a05297ae00db52360f3df5ed1d5" compoundref="a00085" startline="5727" endline="5789">environment::performSpontaneousCondensation</referencedby>
        <referencedby refid="a00014_1a4fe7891fb38f3f25bb82769af0ddfe19" compoundref="a00085" startline="5851" endline="6012">environment::newSpeciesEvaluationIII</referencedby>
        <referencedby refid="a00014_1a5ee6b203f077de1467aa72042814db7d" compoundref="a00085" startline="6025" endline="6119">environment::complexEvaluation</referencedby>
        <referencedby refid="a00014_1adab0607255ca5927b69cb6882917e031" compoundref="a00085" startline="6125" endline="6149">environment::updateSpeciesAges</referencedby>
        <referencedby refid="a00014_1a429c2529badaeda72e553f500b990e11" compoundref="a00085" startline="6267" endline="6319">environment::printInitialCondition</referencedby>
        <referencedby refid="a00014_1af579052ed051a2e3516218220d238303" compoundref="a00085" startline="6381" endline="6400">environment::printAllChargeMols</referencedby>
        <referencedby refid="a00014_1a97305e36924f19e72bfc1c3d89e45931" compoundref="a00085" startline="6472" endline="6561">environment::resetConcentrationToInitialConditions</referencedby>
        <referencedby refid="a00014_1a71f4c5ff1c11a9d61cbc818682a4a91e" compoundref="a00085" startline="6613" endline="6775">environment::saveConfigurationFileSTD</referencedby>
        <referencedby refid="a00014_1a8f831e2db11fa5d840484345dac64fc7" compoundref="a00085" startline="6783" endline="6813">environment::saveInfluxStructureSTD</referencedby>
        <referencedby refid="a00014_1a1412b9b1c3bd3e42bcb481f5e18ea931" compoundref="a00085" startline="6821" endline="6851">environment::saveNrgBoolFncStructureSTD</referencedby>
        <referencedby refid="a00014_1a9daeb4f255100b8ad59de9ea80b19b5b" compoundref="a00085" startline="6859" endline="6917">environment::saveSpeciesStructureSTD</referencedby>
        <referencedby refid="a00014_1ad381c4ce24045d504539bb7c74800739" compoundref="a00085" startline="6924" endline="6971">environment::saveReactionsStructureSTD</referencedby>
        <referencedby refid="a00014_1a0a799b3a42bd90845a915298e184708c" compoundref="a00085" startline="6978" endline="7027">environment::saveCatalysisStructureSTD</referencedby>
        <referencedby refid="a00014_1a73e83c4fcfe612514714a6692270351e" compoundref="a00085" startline="7035" endline="7114">environment::saveTimesSTD</referencedby>
        <referencedby refid="a00014_1ad78fcf39a80e447a9aa2f84ab74335e5" compoundref="a00085" startline="7122" endline="7173">environment::saveReactionsParametersSTD</referencedby>
        <referencedby refid="a00014_1a623c3cda23a18cb7b039c5a666408d72" compoundref="a00085" startline="7181" endline="7234">environment::saveLivingSpeciesIDSTD</referencedby>
        <referencedby refid="a00014_1a26c70b0a84c37c87952628d4a328c238" compoundref="a00085" startline="7242" endline="7300">environment::saveLivingSpeciesAmountSTD</referencedby>
        <referencedby refid="a00014_1aedf8d90e1fe734948bf2213489840582" compoundref="a00085" startline="7308" endline="7364">environment::saveLivingSpeciesConcentrationSTD</referencedby>
        <referencedby refid="a00089_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="a00089" startline="354" endline="617">main</referencedby>
        <referencedby refid="a00089_1acac21f7e718db9d00451e3caaaacc25f" compoundref="a00089" startline="633" endline="642">saveToFile</referencedby>
        <referencedby refid="a00089_1a2bf310904bc4e1fb5669e548525c4ba7" compoundref="a00089" startline="653" endline="658">saveTimesToFile</referencedby>
        <referencedby refid="a00089_1a4665c5f33b43dfc8fae4757552028cc0" compoundref="a00089" startline="669" endline="690">saveInitialConditionsToFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1a4d1aa74fac80ae0275c056575fdb6626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; split</definition>
        <argsstring>(string str, const char *delim)</argsstring>
        <name>split</name>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to split a string and save tokens in a vector </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="279" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="279" bodyend="297"/>
        <referencedby refid="a00014_1aa44bbabec52bf2d61a19685a30e68de1" compoundref="a00085" startline="80" endline="197">environment::environment</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00075_1aed580149796de6350e6fcfae9b2adb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fromStrToBool</definition>
        <argsstring>(string const &amp;string)</argsstring>
        <name>fromStrToBool</name>
        <param>
          <type>string const &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to convert from string to boolean </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" line="302" column="1" bodyfile="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp" bodystart="302" bodyend="305"/>
        <referencedby refid="a00014_1aa44bbabec52bf2d61a19685a30e68de1" compoundref="a00085" startline="80" endline="197">environment::environment</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>commonFunctions.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>acsm2s</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by<sp/>Alessandro<sp/>Filisetti<sp/>on<sp/>27/03/09.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>2009<sp/>__MyCompanyName__.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//prova</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00076" kindref="compound">commonFunctions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="a00076_1ab1b8087986873e2bb998bac0e7918b50" refkind="member"><highlight class="normal"><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00075_1aa6403f90846f5fb19fcfb8b81aeee73c" kindref="member">returnSelectionIdFromAWeightProbVector</ref>(<ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>*tmpArray,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator,<sp/><ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref><sp/>tmpRow)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tmpArray<sp/>is<sp/>not<sp/>a<sp/>vector.<sp/>Access<sp/>is<sp/>made<sp/>by<sp/>[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>pnt<sp/>=<sp/>tmpRandomGenerator();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idReturned<sp/>=<sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(foundFlag<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpArray[position]<sp/>&gt;<sp/>pnt)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idReturned<sp/>=<sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position++;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idReturned;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="a00076_1ae4d6f026d5445b877a52e326fd95a081" refkind="member"><highlight class="normal"><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00075_1aa6403f90846f5fb19fcfb8b81aeee73c" kindref="member">returnSelectionIdFromAWeightProbVector</ref>(vector&lt;acs_double&gt;&amp;<sp/>tmpVector,<sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>tmpMaxValue,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator,<sp/><ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref><sp/>tmpRow)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>pnt<sp/>=<sp/>tmpRandomGenerator();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>idReturned<sp/>=<sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(foundFlag<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpVector.at(position)<sp/>&gt;<sp/>(pnt*tmpMaxValue))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idReturned<sp/>=<sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>returnSelectionIdFromAWeightProbVector<sp/>tmpVector.at(position)...used<sp/>in<sp/>row<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpRow<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector<sp/>size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpVector.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>position<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>position<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;exception<sp/>caught:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00075_1aa678d0a98232158c48108227b98de4b6" kindref="member">ExitWithError</ref>(</highlight><highlight class="stringliteral">&quot;returnSelectionIdFromAWeightProbVector&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;exception<sp/>error<sp/>thrown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position++;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idReturned;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="a00076_1a4135ff15fd24eb8fbfee3d00e1cfbf20" refkind="member"><highlight class="normal"><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00075_1a4135ff15fd24eb8fbfee3d00e1cfbf20" kindref="member">returnSelectionIdFromAWeightProbVectorAlreadyNormalized</ref>(vector&lt;acs_double&gt;&amp;<sp/>tmpVector,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>pnt<sp/>=<sp/>tmpRandomGenerator();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>idReturned<sp/>=<sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>tmpCumulativeProbability<sp/>=<sp/>tmpVector.at(0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(foundFlag<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(position<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)tmpVector.size())</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>FATAL<sp/>ERROR<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;idReturned:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idReturned<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Position<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>position<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>grater<sp/>than<sp/>the<sp/>maximum<sp/>number<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpVector.size()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cum<sp/>prob:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpCumulativeProbability&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>RN:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pnt<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Suggestion<sp/>&gt;&gt;<sp/>Check<sp/>that<sp/>the<sp/>cumulative<sp/>sum<sp/>of<sp/>the<sp/>probabilities<sp/>is<sp/>equal<sp/>to<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00075_1aa678d0a98232158c48108227b98de4b6" kindref="member">ExitWithError</ref>(</highlight><highlight class="stringliteral">&quot;returnSelectionIdFromAWeightProbQListAlreadyNormalized&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>return<sp/>selection<sp/>from<sp/>weight<sp/>prob<sp/>Qlist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpCumulativeProbability<sp/>&gt;=<sp/>pnt)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idReturned<sp/>=<sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(position<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)tmpVector.size()-1)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idReturned<sp/>=<sp/><ref refid="a00102_1ac09e85f8df5b7c8c7d2caf87e9193421" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpCumulativeProbability<sp/>+=<sp/>tmpVector.at(position);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(exception&amp;e)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;returnSelectionIdFromAWeightProbVectorAlreadyNormalized<sp/>tmpVector.at(position)...&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Vector<sp/>size<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpVector.size()&lt;&lt;</highlight><highlight class="stringliteral">&quot;-<sp/>position&quot;</highlight><highlight class="normal">&lt;&lt;position&lt;&lt;endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;exceptioncaught:&quot;</highlight><highlight class="normal">&lt;&lt;e.what()&lt;&lt;endl;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00075_1aa678d0a98232158c48108227b98de4b6" kindref="member">ExitWithError</ref>(</highlight><highlight class="stringliteral">&quot;returnSelectionIdFromAWeightProbVectorAlreadyNormalized&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;exceptionerrorthrown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position++;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idReturned;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="a00076_1a1cb9cc6ac8ec2ef62b8eb1970e73a11b" refkind="member"><highlight class="normal"><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00075_1a1cb9cc6ac8ec2ef62b8eb1970e73a11b" kindref="member">returnUniformSelection_LONG_IdFromVector</ref>(vector&lt;acs_longInt&gt;&amp;<sp/>tmpVector,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>totalSize<sp/>=<sp/>tmpVector.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>pnt<sp/>=<sp/><ref refid="a00075_1a6d28311eff309499e66efb5d39a035f4" kindref="member">getIntRandom</ref>(0,<sp/>totalSize,<sp/>tmpRandomGenerator);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pnt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="a00076_1a6d28311eff309499e66efb5d39a035f4" refkind="member"><highlight class="normal"><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00075_1a6d28311eff309499e66efb5d39a035f4" kindref="member">getIntRandom</ref>(<ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>tmpFromNum,<sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>tmpToNum,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmpToNum<sp/>&lt;<sp/>tmpFromNum)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tmpToNum<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpToNum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>is<sp/>&lt;<sp/>of<sp/>tmpFromNum<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpFromNum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>...<sp/>Cannot<sp/>generate<sp/>a<sp/>number<sp/>with<sp/>a<sp/>negative<sp/>delta&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>Result<sp/>=<sp/>tmpRandomGenerator()<sp/>*<sp/>(tmpToNum<sp/>+<sp/>1<sp/>-<sp/>tmpFromNum)<sp/>+<sp/>tmpFromNum;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>random<sp/>outcome<sp/>in<sp/>Result<sp/>variable<sp/>is<sp/>out<sp/>of<sp/>the<sp/>boundaries<sp/>passed<sp/>by<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>function<sp/>exit<sp/>with<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Result<sp/>&lt;<sp/>tmpFromNum)<sp/>||<sp/>(Result<sp/>&gt;<sp/>tmpToNum))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Result<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tGenerate<sp/>a<sp/>number<sp/>out<sp/>of<sp/>boundaries&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(Result);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="a00076_1aed308af1d3ee40e106e4e23e78644d07" refkind="member"><highlight class="normal"><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/><ref refid="a00075_1aed308af1d3ee40e106e4e23e78644d07" kindref="member">getDoubleRandom</ref>(<ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>tmpFromNum,<sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>tmpToNum,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>parameters<sp/>passed<sp/>to<sp/>this<sp/>function<sp/>are<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>exit<sp/>with<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tmpFromNum<sp/>&lt;<sp/>0)<sp/>||<sp/>(tmpToNum<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tmpFromNum:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpFromNum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\ttmpToNum:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpToNum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tCannot<sp/>generate<sp/>a<sp/>number<sp/>with<sp/>negative<sp/>numbers&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>tmpToNum<sp/>is<sp/>minor<sp/>of<sp/>tmpFromNum<sp/>this<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>exit<sp/>with<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmpToNum<sp/>&lt;<sp/>tmpFromNum)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tmpToNum<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpFromNum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>is<sp/>&lt;<sp/>of<sp/>tmpFromNum<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpToNum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>...<sp/>Cannot<sp/>generate<sp/>a<sp/>number<sp/>with<sp/>a<sp/>negative<sp/>delta&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00016" kindref="compound">MTRand</ref><sp/>randomGen;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>Result<sp/>=<sp/>tmpRandomGenerator()<sp/>*<sp/>(tmpToNum<sp/>-<sp/>tmpFromNum)<sp/>+<sp/>tmpFromNum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>random<sp/>outcome<sp/>in<sp/>Result<sp/>variable<sp/>is<sp/>out<sp/>of<sp/>the<sp/>boundaries<sp/>passed<sp/>by<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>function<sp/>exit<sp/>with<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Result<sp/>&lt;<sp/>tmpFromNum)<sp/>||<sp/>(Result<sp/>&gt;<sp/>tmpToNum))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Result<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tGenerate<sp/>a<sp/>number<sp/>out<sp/>of<sp/>boundaries&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(Result);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="a00076_1a22cddb6ffcf2250e0c90bc913728350f" refkind="member"><highlight class="normal"><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00075_1a22cddb6ffcf2250e0c90bc913728350f" kindref="member">random_poisson</ref>(<ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>tmpLambda,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/><ref refid="a00028_1aa2b4c35904308d35fc5d606a429e608d" kindref="member">p</ref>=exp(-tmpLambda);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>g=<ref refid="a00028_1aa2b4c35904308d35fc5d606a429e608d" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>u=tmpRandomGenerator();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00025_1ab7005e24e9bb6ea9b6e14c4ac2614a31" kindref="member">k</ref>=0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(g<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(u&gt;g)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p*=(tmpLambda/(<ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref>)(++k));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g+=<ref refid="a00028_1aa2b4c35904308d35fc5d606a429e608d" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00025_1ab7005e24e9bb6ea9b6e14c4ac2614a31" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="a00076_1a78d5b4a67b6e66b8ceaa85874a2a12b7" refkind="member"><highlight class="normal"><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00075_1a78d5b4a67b6e66b8ceaa85874a2a12b7" kindref="member">random_binomial</ref>(<ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/>n,<sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>tmpP,<sp/><ref refid="a00016" kindref="compound">MTRand</ref>&amp;<sp/>tmpRandomGenerator)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>acs_double<sp/>t=tmpP/(1-tmpP);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>acs_double<sp/>u=tmpRandomGenerator();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>acs_double<sp/>p0=pow(double(1-tmpP),double(n));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>acs_double<sp/>g=p0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>acs_longInt<sp/>k=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(u&gt;g)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0*=t*(n-k)/(k+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g+=p0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>k;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1a19319d75f02db4308bc5c0026d98cd85" kindref="member">acs_longInt</ref><sp/><ref refid="a00025_1ab7005e24e9bb6ea9b6e14c4ac2614a31" kindref="member">k</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref><sp/><ref refid="a00027_1a1de1a45bc56b002aa1ad94bb5f54a1ca" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="a00027_1a1de1a45bc56b002aa1ad94bb5f54a1ca" kindref="member">i</ref><sp/>&lt;<sp/>n;<sp/><ref refid="a00027_1a1de1a45bc56b002aa1ad94bb5f54a1ca" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmpRandomGenerator()<sp/>&lt;<sp/>tmpP)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00025_1ab7005e24e9bb6ea9b6e14c4ac2614a31" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="a00076_1a277c801cb0f8a290d7c28b6a67feff18" refkind="member"><highlight class="normal"><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/><ref refid="a00075_1a277c801cb0f8a290d7c28b6a67feff18" kindref="member">acsround</ref>(<ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>tmpX)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref><sp/>integerPart<sp/>=<sp/>(<ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref>)tmpX;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref><sp/>decimalPart<sp/>=<sp/>tmpX<sp/>-<sp/>(<ref refid="a00072_1ab776853a005fcbf56af0424a2a4dd607" kindref="member">acs_double</ref>)integerPart;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decimalPart&gt;=0.5){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ceil(decimalPart)<sp/>+<sp/>integerPart;}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>floor(decimalPart)<sp/>+<sp/>integerPart;}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="a00076_1a1a13653eb649b6fc74090deecddf1028" refkind="member"><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="a00075_1a1a13653eb649b6fc74090deecddf1028" kindref="member">dec2bin</ref>(<ref refid="a00072_1a8d277355641a098190360234e2ebde35" kindref="member">acs_int</ref><sp/>tmpInt){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a00062_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>=</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmpInt)*8;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s=0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a00025_1a230414213a9710ed03b6cf8d2695ee94" kindref="member">a</ref>=0;<ref refid="a00025_1a230414213a9710ed03b6cf8d2695ee94" kindref="member">a</ref>&lt;<ref refid="a00062_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>;<ref refid="a00025_1a230414213a9710ed03b6cf8d2695ee94" kindref="member">a</ref>++){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bit=tmpInt&gt;&gt;(size-1);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s=1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(bit+</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpInt&lt;&lt;=1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res.size())</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>&apos;0&apos;<sp/>char<sp/>to<sp/>complete<sp/>the<sp/>string<sp/>of<sp/>12<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res.size()<sp/>&lt;<sp/>12)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>res;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="a00076_1aa678d0a98232158c48108227b98de4b6" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a00075_1aa678d0a98232158c48108227b98de4b6" kindref="member">ExitWithError</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strFunctionName,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strError)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strFunctionName<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strError<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="a00076_1a4d1aa74fac80ae0275c056575fdb6626" refkind="member"><highlight class="normal">vector&lt;string&gt;<sp/><ref refid="a00075_1a4d1aa74fac80ae0275c056575fdb6626" kindref="member">split</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>delim)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>writable<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[str.size()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(str.begin(),<sp/>str.end(),<sp/>writable);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>writable[str.size()]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>forget<sp/>the<sp/>terminating<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token<sp/>=<sp/>strtok(writable,delim);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>result;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(token<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(token);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>strtok(NULL,delim);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>writable;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="a00076_1aed580149796de6350e6fcfae9b2adb30" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a00075_1aed580149796de6350e6fcfae9b2adb30" kindref="member">fromStrToBool</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp"/>
  </compounddef>
</doxygen>
