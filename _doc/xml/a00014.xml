<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="a00014" kind="class" prot="public">
    <compoundname>MTRand_open</compoundname>
    <basecompoundref refid="a00013" prot="public" virt="non-virtual">MTRand_int32</basecompoundref>
    <includes refid="a00085" local="no">mtrand.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a00014_1a58140b54564be39382da163954177389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MTRand_open::MTRand_open</definition>
        <argsstring>()</argsstring>
        <name>MTRand_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="127" column="1" bodyfile="/home/ale/Documents/GIT/carness/mtrand.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="a00014_1a1f55ebc1052f5343f8d6e08a752ef957" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MTRand_open::MTRand_open</definition>
        <argsstring>(unsigned long seed)</argsstring>
        <name>MTRand_open</name>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="128" column="1" bodyfile="/home/ale/Documents/GIT/carness/mtrand.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="a00014_1a0216992f4dfa5acf22ee8c585eeac488" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MTRand_open::MTRand_open</definition>
        <argsstring>(const unsigned long *seed, int size)</argsstring>
        <name>MTRand_open</name>
        <param>
          <type>const unsigned long *</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="129" column="1" bodyfile="/home/ale/Documents/GIT/carness/mtrand.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="a00014_1a4f4774b5d9b79972dedaec984b248581" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MTRand_open::~MTRand_open</definition>
        <argsstring>()</argsstring>
        <name>~MTRand_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="130" column="1" bodyfile="/home/ale/Documents/GIT/carness/mtrand.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="a00014_1ac408aa400ca59fc2afc888d88f98d807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double MTRand_open::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="131" column="1" bodyfile="/home/ale/Documents/GIT/carness/mtrand.h" bodystart="131" bodyend="132"/>
        <references refid="a00013_1abacdfa346255baeac69d29bb57f29b22" compoundref="a00085" startline="85" endline="94">MTRand_int32::rand_int32</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a00014_1ab0e561e68773ed0679df7c9b3339f94c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MTRand_open::MTRand_open</definition>
        <argsstring>(const MTRand_open &amp;)</argsstring>
        <name>MTRand_open</name>
        <param>
          <type>const <ref refid="a00014" kindref="compound">MTRand_open</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00014_1aebf45153c579f32b228a7f42246e3c23" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MTRand_open::operator=</definition>
        <argsstring>(const MTRand_open &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="a00014" kindref="compound">MTRand_open</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="61">
        <label>MTRand_int32</label>
        <link refid="a00013"/>
      </node>
      <node id="60">
        <label>MTRand_open</label>
        <link refid="a00014"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="63">
        <label>MTRand_int32</label>
        <link refid="a00013"/>
      </node>
      <node id="62">
        <label>MTRand_open</label>
        <link refid="a00014"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/ale/Documents/GIT/carness/mtrand.h" line="125" column="1" bodyfile="/home/ale/Documents/GIT/carness/mtrand.h" bodystart="125" bodyend="136"/>
    <listofallmembers>
      <member refid="a00013_1a034f223c086f5368bd220b02f2cc12a8" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>MTRand_int32</name></member>
      <member refid="a00013_1ad30f7c63a6f1fb3c3b76b8ce6ffa0206" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>MTRand_int32</name></member>
      <member refid="a00013_1a19acddb3910a7282517b2ffc398b92b4" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>MTRand_int32</name></member>
      <member refid="a00014_1a58140b54564be39382da163954177389" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>MTRand_open</name></member>
      <member refid="a00014_1a1f55ebc1052f5343f8d6e08a752ef957" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>MTRand_open</name></member>
      <member refid="a00014_1a0216992f4dfa5acf22ee8c585eeac488" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>MTRand_open</name></member>
      <member refid="a00014_1ab0e561e68773ed0679df7c9b3339f94c" prot="private" virt="non-virtual"><scope>MTRand_open</scope><name>MTRand_open</name></member>
      <member refid="a00014_1ac408aa400ca59fc2afc888d88f98d807" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>operator()</name></member>
      <member refid="a00014_1aebf45153c579f32b228a7f42246e3c23" prot="private" virt="non-virtual"><scope>MTRand_open</scope><name>operator=</name></member>
      <member refid="a00013_1abacdfa346255baeac69d29bb57f29b22" prot="protected" virt="non-virtual"><scope>MTRand_open</scope><name>rand_int32</name></member>
      <member refid="a00013_1a0c57076fe30358e0700a7ce1baa0ea27" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>seed</name></member>
      <member refid="a00013_1a3cabc1e3445716236a570ffd2f69686d" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>seed</name></member>
      <member refid="a00013_1a364900abea0758d070ce89922159923a" prot="public" virt="virtual"><scope>MTRand_open</scope><name>~MTRand_int32</name></member>
      <member refid="a00014_1a4f4774b5d9b79972dedaec984b248581" prot="public" virt="non-virtual"><scope>MTRand_open</scope><name>~MTRand_open</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
