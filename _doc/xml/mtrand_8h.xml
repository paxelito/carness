<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="mtrand_8h" kind="file">
    <compoundname>mtrand.h</compoundname>
    <includedby refid="acs__headers_8h" local="yes">/Users/alessandrofilisetti/Documents/GIT/carness/acs_headers.h</includedby>
    <includedby refid="mtrand_8cpp" local="yes">/Users/alessandrofilisetti/Documents/GIT/carness/mtrand.cpp</includedby>
    <invincdepgraph>
      <node id="286">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/reactions.cpp</label>
        <link refid="reactions_8cpp"/>
      </node>
      <node id="276">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/catalysis.h</label>
        <link refid="catalysis_8h"/>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="274">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/mtrand.h</label>
        <link refid="mtrand.h"/>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/reactions.h</label>
        <link refid="reactions_8h"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="289">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/mtrand.cpp</label>
        <link refid="mtrand_8cpp"/>
      </node>
      <node id="288">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/gillespie.cpp</label>
        <link refid="gillespie_8cpp"/>
      </node>
      <node id="275">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/acs_headers.h</label>
        <link refid="acs__headers_8h"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
      </node>
      <node id="283">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/species.h</label>
        <link refid="species_8h"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.cpp</label>
        <link refid="common_functions_8cpp"/>
      </node>
      <node id="278">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/environment.h</label>
        <link refid="environment_8h"/>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/commonFunctions.h</label>
        <link refid="common_functions_8h"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/catalysis.cpp</label>
        <link refid="catalysis_8cpp"/>
      </node>
      <node id="279">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/environment.cpp</label>
        <link refid="environment_8cpp"/>
      </node>
      <node id="287">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/gillespie.h</label>
        <link refid="gillespie_8h"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>/Users/alessandrofilisetti/Documents/GIT/carness/species.cpp</label>
        <link refid="species_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_m_t_rand__int32" prot="public">MTRand_int32</innerclass>
    <innerclass refid="class_m_t_rand" prot="public">MTRand</innerclass>
    <innerclass refid="class_m_t_rand__closed" prot="public">MTRand_closed</innerclass>
    <innerclass refid="class_m_t_rand__open" prot="public">MTRand_open</innerclass>
    <innerclass refid="class_m_t_rand53" prot="public">MTRand53</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>mtrand.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>include<sp/>file<sp/>for<sp/>MT19937,<sp/>with<sp/>initialization<sp/>improved<sp/>2002/1/26.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Coded<sp/>by<sp/>Takuji<sp/>Nishimura<sp/>and<sp/>Makoto<sp/>Matsumoto.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ported<sp/>to<sp/>C++<sp/>by<sp/>Jasper<sp/>Bedaux<sp/>2003/1/1<sp/>(see<sp/>http://www.bedaux.net/mtrand/).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>generators<sp/>returning<sp/>floating<sp/>point<sp/>numbers<sp/>are<sp/>based<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>version<sp/>by<sp/>Isaku<sp/>Wada,<sp/>2002/01/09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>1997<sp/>-<sp/>2002,<sp/>Makoto<sp/>Matsumoto<sp/>and<sp/>Takuji<sp/>Nishimura,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>The<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>feedback<sp/>is<sp/>very<sp/>welcome.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.math.keio.ac.jp/matumoto/emt.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>email:<sp/>matumoto@math.keio.ac.jp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Feedback<sp/>about<sp/>the<sp/>C++<sp/>port<sp/>should<sp/>be<sp/>sent<sp/>to<sp/>Jasper<sp/>Bedaux,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>http://www.bedaux.net/mtrand/<sp/>for<sp/>e-mail<sp/>address<sp/>and<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MTRAND_H</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MTRAND_H</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_m_t_rand__int32" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Mersenne<sp/>Twister<sp/>random<sp/>number<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>default<sp/>constructor:<sp/>uses<sp/>default<sp/>seed<sp/>only<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_m_t_rand__int32_1a034f223c086f5368bd220b02f2cc12a8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__int32_1a034f223c086f5368bd220b02f2cc12a8" kindref="member">MTRand_int32</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init)<sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>(5489UL);<sp/>init<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructor<sp/>with<sp/>32<sp/>bit<sp/>int<sp/>as<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_m_t_rand__int32_1ad30f7c63a6f1fb3c3b76b8ce6ffa0206" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__int32_1ad30f7c63a6f1fb3c3b76b8ce6ffa0206" kindref="member">MTRand_int32</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>s)<sp/>{<sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>(s);<sp/>init<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructor<sp/>with<sp/>array<sp/>of<sp/>size<sp/>32<sp/>bit<sp/>ints<sp/>as<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_m_t_rand__int32_1a19acddb3910a7282517b2ffc398b92b4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__int32_1a19acddb3910a7282517b2ffc398b92b4" kindref="member">MTRand_int32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crea__e__controlla__i__catalizzatori_8m_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>)<sp/>{<sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>(array,<sp/>size);<sp/>init<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>two<sp/>seed<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>seed<sp/>with<sp/>32<sp/>bit<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crea__e__controlla__i__catalizzatori_8m_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>);<sp/></highlight><highlight class="comment">//<sp/>seed<sp/>with<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overload<sp/>operator()<sp/>to<sp/>make<sp/>this<sp/>a<sp/>generator<sp/>(functor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_m_t_rand__int32_1ad7fe22190d0411c6dac8e6f471633aa4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1ad7fe22190d0411c6dac8e6f471633aa4" kindref="member">operator()</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">rand_int32</ref>();<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2007-02-11:<sp/>made<sp/>the<sp/>destructor<sp/>virtual;<sp/>thanks<sp/>&quot;double<sp/>more&quot;<sp/>for<sp/>pointing<sp/>this<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_m_t_rand__int32_1a364900abea0758d070ce89922159923a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1a364900abea0758d070ce89922159923a" kindref="member">~MTRand_int32</ref>()<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>derived<sp/>classes,<sp/>otherwise<sp/>not<sp/>accessible;<sp/>use<sp/>the<sp/>()-operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">rand_int32</ref>();<sp/></highlight><highlight class="comment">//<sp/>generate<sp/>32<sp/>bit<sp/>random<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>624,<sp/>m<sp/>=<sp/>397;<sp/></highlight><highlight class="comment">//<sp/>compile<sp/>time<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>variables<sp/>below<sp/>are<sp/>static<sp/>(no<sp/>duplicates<sp/>can<sp/>exist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>state[n];<sp/></highlight><highlight class="comment">//<sp/>state<sp/>vector<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p;<sp/></highlight><highlight class="comment">//<sp/>position<sp/>in<sp/>state<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init;<sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>init<sp/>function<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>private<sp/>functions<sp/>used<sp/>to<sp/>generate<sp/>the<sp/>pseudo<sp/>random<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>twiddle(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>used<sp/>by<sp/>gen_state()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_state();<sp/></highlight><highlight class="comment">//<sp/>generate<sp/>new<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>copy<sp/>constructor<sp/>and<sp/>assignment<sp/>operator<sp/>unavailable,<sp/>they<sp/>don&apos;t<sp/>make<sp/>sense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__int32_1a034f223c086f5368bd220b02f2cc12a8" kindref="member">MTRand_int32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>constructor<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>assignment<sp/>operator<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inline<sp/>for<sp/>speed,<sp/>must<sp/>therefore<sp/>reside<sp/>in<sp/>header<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>MTRand_int32::twiddle(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>u,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((u<sp/>&amp;<sp/>0x80000000UL)<sp/>|<sp/>(v<sp/>&amp;<sp/>0x7FFFFFFFUL))<sp/>&gt;&gt;<sp/>1)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>^<sp/>((v<sp/>&amp;<sp/>1UL)<sp/>?<sp/>0x9908B0DFUL<sp/>:<sp/>0x0UL);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">MTRand_int32::rand_int32</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>generate<sp/>32<sp/>bit<sp/>random<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>n)<sp/>gen_state();<sp/></highlight><highlight class="comment">//<sp/>new<sp/>state<sp/>vector<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gen_state()<sp/>is<sp/>split<sp/>off<sp/>to<sp/>be<sp/>non-inline,<sp/>because<sp/>it<sp/>is<sp/>only<sp/>called<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>every<sp/>624<sp/>calls<sp/>and<sp/>otherwise<sp/>irand()<sp/>would<sp/>become<sp/>too<sp/>big<sp/>to<sp/>get<sp/>inlined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="garbage_search_8m_1a7265972fe485274cfff77a9bb07b8fce" kindref="member">x</ref><sp/>=<sp/>state[p++];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>x<sp/>^=<sp/>(x<sp/>&gt;&gt;<sp/>11);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>x<sp/>^=<sp/>(x<sp/>&lt;&lt;<sp/>7)<sp/>&amp;<sp/>0x9D2C5680UL;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>x<sp/>^=<sp/>(x<sp/>&lt;&lt;<sp/>15)<sp/>&amp;<sp/>0xEFC60000UL;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>^<sp/>(x<sp/>&gt;&gt;<sp/>18);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generates<sp/>double<sp/>floating<sp/>point<sp/>numbers<sp/>in<sp/>the<sp/>half-open<sp/>interval<sp/>[0,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_m_t_rand" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_rand" kindref="compound">MTRand</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99" refid="class_m_t_rand_1a265dc65546e26073c0d5f8787b045a1d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand_1a265dc65546e26073c0d5f8787b045a1d" kindref="member">MTRand</ref>()<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="100" refid="class_m_t_rand_1a2c88736896bcbdb54bcdd7a0026720d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand_1a2c88736896bcbdb54bcdd7a0026720d5" kindref="member">MTRand</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed)<sp/>{}</highlight></codeline>
<codeline lineno="101" refid="class_m_t_rand_1a6075a3beacdfb8e4cf48d9fb56cc193a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand_1a6075a3beacdfb8e4cf48d9fb56cc193a" kindref="member">MTRand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crea__e__controlla__i__catalizzatori_8m_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed,<sp/>size)<sp/>{}</highlight></codeline>
<codeline lineno="102" refid="class_m_t_rand_1a8c276546a41ae350dc9efc5e9c10a261" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand_1a8c276546a41ae350dc9efc5e9c10a261" kindref="member">~MTRand</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="103" refid="class_m_t_rand_1abbb87a08d622d58fdee0eea4cb5471a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand_1abbb87a08d622d58fdee0eea4cb5471a0" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">rand_int32</ref>())<sp/>*<sp/>(1.<sp/>/<sp/>4294967296.);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>divided<sp/>by<sp/>2^32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand_1a265dc65546e26073c0d5f8787b045a1d" kindref="member">MTRand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand" kindref="compound">MTRand</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>constructor<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand" kindref="compound">MTRand</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>assignment<sp/>operator<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generates<sp/>double<sp/>floating<sp/>point<sp/>numbers<sp/>in<sp/>the<sp/>closed<sp/>interval<sp/>[0,<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_m_t_rand__closed" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_rand__closed" kindref="compound">MTRand_closed</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113" refid="class_m_t_rand__closed_1a09b3b21b3cb35d04f2b6c290a817b2e8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__closed_1a09b3b21b3cb35d04f2b6c290a817b2e8" kindref="member">MTRand_closed</ref>()<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="114" refid="class_m_t_rand__closed_1ad5dc83250b16f22d4693a18b51816271" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__closed_1ad5dc83250b16f22d4693a18b51816271" kindref="member">MTRand_closed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed)<sp/>{}</highlight></codeline>
<codeline lineno="115" refid="class_m_t_rand__closed_1a37e322f97253b7013823a267bcfe82d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__closed_1a37e322f97253b7013823a267bcfe82d1" kindref="member">MTRand_closed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crea__e__controlla__i__catalizzatori_8m_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed,<sp/>size)<sp/>{}</highlight></codeline>
<codeline lineno="116" refid="class_m_t_rand__closed_1a46567ee841b5f54b305ac051ac837a8c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__closed_1a46567ee841b5f54b305ac051ac837a8c" kindref="member">~MTRand_closed</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="117" refid="class_m_t_rand__closed_1ad0c535263b63c95029523183f672f62d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__closed_1ad0c535263b63c95029523183f672f62d" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">rand_int32</ref>())<sp/>*<sp/>(1.<sp/>/<sp/>4294967295.);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>divided<sp/>by<sp/>2^32<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__closed_1a09b3b21b3cb35d04f2b6c290a817b2e8" kindref="member">MTRand_closed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__closed" kindref="compound">MTRand_closed</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>constructor<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__closed" kindref="compound">MTRand_closed</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>assignment<sp/>operator<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generates<sp/>double<sp/>floating<sp/>point<sp/>numbers<sp/>in<sp/>the<sp/>open<sp/>interval<sp/>(0,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_m_t_rand__open" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_rand__open" kindref="compound">MTRand_open</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127" refid="class_m_t_rand__open_1a58140b54564be39382da163954177389" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__open_1a58140b54564be39382da163954177389" kindref="member">MTRand_open</ref>()<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="128" refid="class_m_t_rand__open_1a1f55ebc1052f5343f8d6e08a752ef957" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__open_1a1f55ebc1052f5343f8d6e08a752ef957" kindref="member">MTRand_open</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed)<sp/>{}</highlight></codeline>
<codeline lineno="129" refid="class_m_t_rand__open_1a0216992f4dfa5acf22ee8c585eeac488" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__open_1a0216992f4dfa5acf22ee8c585eeac488" kindref="member">MTRand_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crea__e__controlla__i__catalizzatori_8m_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed,<sp/>size)<sp/>{}</highlight></codeline>
<codeline lineno="130" refid="class_m_t_rand__open_1a4f4774b5d9b79972dedaec984b248581" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__open_1a4f4774b5d9b79972dedaec984b248581" kindref="member">~MTRand_open</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="131" refid="class_m_t_rand__open_1ac408aa400ca59fc2afc888d88f98d807" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__open_1ac408aa400ca59fc2afc888d88f98d807" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(static_cast&lt;double&gt;(<ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">rand_int32</ref>())<sp/>+<sp/>.5)<sp/>*<sp/>(1.<sp/>/<sp/>4294967296.);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>divided<sp/>by<sp/>2^32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand__open_1a58140b54564be39382da163954177389" kindref="member">MTRand_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__open" kindref="compound">MTRand_open</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>constructor<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__open" kindref="compound">MTRand_open</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>assignment<sp/>operator<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generates<sp/>53<sp/>bit<sp/>resolution<sp/>doubles<sp/>in<sp/>the<sp/>half-open<sp/>interval<sp/>[0,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_m_t_rand53" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_rand53" kindref="compound">MTRand53</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141" refid="class_m_t_rand53_1a24711c9e6e5ee72715f34515d1f1939a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand53_1a24711c9e6e5ee72715f34515d1f1939a" kindref="member">MTRand53</ref>()<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="142" refid="class_m_t_rand53_1ad800887e15d4095f22facdb67f270c5e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand53_1ad800887e15d4095f22facdb67f270c5e" kindref="member">MTRand53</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed)<sp/>{}</highlight></codeline>
<codeline lineno="143" refid="class_m_t_rand53_1ac77b190d3ac27adea2d2c6c2ce2347c3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand53_1ac77b190d3ac27adea2d2c6c2ce2347c3" kindref="member">MTRand53</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/><ref refid="class_m_t_rand__int32_1a0c57076fe30358e0700a7ce1baa0ea27" kindref="member">seed</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="crea__e__controlla__i__catalizzatori_8m_1ae113ea7f9e515a12ac4b5595c6faf61e" kindref="member">size</ref>)<sp/>:<sp/><ref refid="class_m_t_rand__int32" kindref="compound">MTRand_int32</ref>(seed,<sp/>size)<sp/>{}</highlight></codeline>
<codeline lineno="144" refid="class_m_t_rand53_1a947a6a7afd0c8a17612cda3faa705a75" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand53_1a947a6a7afd0c8a17612cda3faa705a75" kindref="member">~MTRand53</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="145" refid="class_m_t_rand53_1ab6657cb5349f39bc4553d3a970458b45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand53_1ab6657cb5349f39bc4553d3a970458b45" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(static_cast&lt;double&gt;(<ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">rand_int32</ref>()<sp/>&gt;&gt;<sp/>5)<sp/>*<sp/>67108864.<sp/>+<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;double&gt;(<ref refid="class_m_t_rand__int32_1abacdfa346255baeac69d29bb57f29b22" kindref="member">rand_int32</ref>()<sp/>&gt;&gt;<sp/>6))<sp/>*<sp/>(1.<sp/>/<sp/>9007199254740992.);<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_rand53_1a24711c9e6e5ee72715f34515d1f1939a" kindref="member">MTRand53</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand53" kindref="compound">MTRand53</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>constructor<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_m_t_rand53" kindref="compound">MTRand53</ref>&amp;);<sp/></highlight><highlight class="comment">//<sp/>assignment<sp/>operator<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MTRAND_H</highlight></codeline>
    </programlisting>
    <location file="/Users/alessandrofilisetti/Documents/GIT/carness/mtrand.h"/>
  </compounddef>
</doxygen>
