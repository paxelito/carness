.TH "intro" 3 "Fri Mar 28 2014" "Version 4.8 (20140327.66)" "CaRNeSS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
intro \- Introduction 

.PP
 The \fBCatalytic Reactions Network Stochastic Simulator (CaRNeSS)\fP is a software devoted to the hybrid, both stochastic and deterministic, simulation of theoretical complex catalytic networks models\&. All the models, characterized by their environmental conditions, basically CSTR and protocell, take inspiration from the original model proposed by Stuart Kauffman in 1986, and describe systems composed of molecular species interacting by means of two possible reactions only, cleavage and condensation\&. One molecular species (basicallt a polymer) is divided into two short polymers in the former case in the former case, while two polymers are glued together forming a longer polymer in the latter case\&. Each reaction to occur must be catalyzed by another species present in the system, and one of the main assumptions is that any chemical has an independent probability to catalyze a randomly chosen reaction\&. Since the version 4\&.8 (20131026\&.60) spontaneous reactions are considered too\&. It is worthwhile to notice that there are not indications about the chemical nature of the molecules, species 'A' may be both a polipeptide, an amminoacid, a particular protein domain or an RNA strenght\&.
.br

.br
 
.SH "System Requirement"
.PP
.PP
 In order to have the simulator run correctly the recommended stuff is required:
.IP "\(bu" 2
MacOsX 10\&.4 or later, Linux (or in general a system UNIX based) or Windows OS (tests have been performed on Win7 and win Vista) as well
.IP "\(bu" 2
GCC (G++) compiler, or similar, installed (if you need to compile the software on your machine)
.PP
.PP
On UNIX systems compile using \fCg++\fP -Wall -ansi -lm -o carness *\&.cpp 
.br

.br
 
.SH "Using the simulator"
.PP
To run the simulator open a terminal shell and type:
.br

.br
 \fC\fP $path/carness \fC\fP <configuration_File_Folder> \fC\fP <output_folder> \fC\fP <reaction_structures_folder>
.br
 Examples:
.IP "\(bu" 2
Unix Based Systems:\fC~/Documents/project/carness\fP \fC~/Documents/\fP\&.\&.\&./confFileFolder/ \fC~/Documents/\fP\&.\&.\&./resFolder/ \fC~/Documents/\fP\&.\&.\&./StructuresFolder/
.IP "\(bu" 2
Win Systems: \fCC:\\Documents\\project\\carness\&.exe\fP \fCC:\\Documents\fP \&.\&.\\confFileFolder\\ \fCC:\\Documents\fP \&.\&.\\resFolder\\ \fCC:\\Documents\fP \&.\&.\\StructuresFolder\\
.PP
.PP
The first argument indicates the folder containing the configuration file acsm2s\&.conf\&. The second argument refers to the folder that will contain the simulation results while the third parameter indicates the folder containing the structures of the system contained within the following files: _acsspecies\&.csv, _acsreactions\&.csv, _acscatalysis\&.csv, _acsinflux\&.csv, _acsnrgbooleanfunctions\&.csv\&. Currently the simulator does not generate the initial structures\&. You must create the structures on your own\&.
.PP
In order to test the DEMO structures, after the program has been compiled, go into the carness folder and run the following command: \fC\fP <path_of_the_program>/carness \fC\fP\&./_inputDataExamples/configurationFile/ \fC\fP\&./_inputDataExamples/initStructures/res/ \fC\fP\&./_inputDataExamples/initStructures/
.PP
PS: For windows platform change the command accordingly\&.
.PP

.br

.br
 
.SH "Input Parameters :: acsm2s\&.conf"
.PP
.PP
 All the system parameters are stored in a file called \fBacsm2s\&.conf\fP\&. Anyone can create his own configuration file paying attention to put '=' char between the parameter name and the parameter value (NO SPACE BETWEEN THEM)\&.
.br
 Notice that the simulator does not create the initial structures but it simply loads the structures created by an external software and process them\&. Nevertheless the configuration file is fundamental to supply all the parameters to the simulation (during the simulation new entities may be created)\&. The simulator is provided with a structures initializator developed in PYTHON language by the group (description will be available soon) in which all the parameters we are going to describe are used to create the initial structures\&. All parameters are reported below divided in three categories: 
.PP
.nf
          - System
          - Environment
          - Dynamic

          Categories are useful only to help users in the parameter recognition within the configuration file. They are not handled from the software, if you like you can rearrange configuration
          file as you prefer, notice only that comments have to start with character <i>"#"</i>.
          Within the source code folder an example of the acsm2s.conf file is provided. (./_inputDataExamples/configurationFile/acsm2s.conf)<br>
 The following parameters are used both by the initializator and the simulator. Nvertheless it is ALWAYS necessary having a complete configuration file even if the structures have been already created.

.fi
.PP
 
.SS "System"
\fBParameters:\fP
.RS 4
\fInGen\fP (> 0) Number of generations\&. This parameter indicate how many times the simulation restarts, concentrations are set to the initial ones and the simulation restart for other nSeconds seconds\&. 
.br
\fInSIM\fP (> 0) Number of simulations per generation starting with the same initial conditions (SAME DATA STRUCTURES) but different random seed\&. It is worth stressing that in such a way the system, if allowed to create new reactions, will create different final structures starting from the same initial structures\&. 
.br
\fInSeconds\fP (> 0) Number of seconds of the simulation 
.br
\fInReactions\fP (> 0) Max number of reactions (the system will be stopped after nSeconds or after nReactions) 
.br
\fIrandomSeed\fP (>= 0) Random seed (if 0 the random seed is randomly created and the it is stored in the acsm2s\&.conf file saved in the results folder) 
.br
\fInHours\fP (>=0) Runtime limit (hours) 
.br
\fInAttempts\fP (>=0) Number of attempts in simulating the same network structure different random seed 
.br
\fIdebugLevel\fP (int) Debug Level Runtime: different runTime message amounts (please refer to header\&.h file for the different values, 0 is suggested) 
.br
\fItimeStructuresSavingInterval\fP (> 0) All system structures (species, catalysis and reactions) are saved every \fItimeStructuresSavingInterval\fP seconds (simulation time) 
.br
\fIfileTimesSaveInterval\fP (>= 0) Times data are stored in file times\&.csv every \fIfileTimesSaveInterval\fP seconds (If 0 reactions are stored continually) 
.RE
.PP
.SS "Environment"
\fBParameters:\fP
.RS 4
\fInewSpeciesProbMinThreshold\fP (>=0) Minimal new species creation probability to allow system expansion 
.br
\fIlastFiringDiskSpeciesID\fP (> 0) The ID of the last firing disk species\&. 
.br
\fIECConcentration\fP (> 0) Incoming concentration of charged molecules per second\&. 
.br
\fIalphabet\fP (string) Alphabet used in the simulation (e\&.g\&. \fIAB\fP for binary alphabet, \fIAGCT\fP for DNA, \fIADEGFLYCWPHQIMTNKSRV\fP for proteins) 
.br
\fIvolume\fP (> 0) Volume of the CSTR or of the protocell 
.RE
.PP
.SS "Dynamic"
\fBParameters:\fP
.RS 4
\fIenergy\fP (0 or 1) 0 no energy in the system, 1 energy constraints are applied 
.br
\fIratioSpeciesEnergizable\fP (%) The probability for a species to be potentially energized by the energy carriers 
.br
\fInonCatalyticMaxLength\fP (>= 0) Max length of non catalytic species 
.br
\fIreactionProbability\fP (from 0 to 1) Probability for a species to catalyze a reaction 
.br
\fIcleavageProbability\fP (from 0 to 1) Cleavage probability (Condensation probability is 1 - cleavage probability) 
.br
\fIreverseReaction\fP (0 or 1) Set to 1 to enable reverse reactions, 0 otherwise 
.br
\fIrevRctRatio\fP (>0) Ratio between forward and backward reactions, it is used in the creation of new reactions only (if reverseReactions = TRUE) 
.br
\fIspontRct\fP (0 or 1) If 1 spontanoues reactions are considered (k spontaneous is the last column of the reactions file), otherwise no 
.br
\fIK_ass\fP (>= 0) Final Condensation kinetic constant (C\&.A + B --> AB + C) where A\&.C is the molecular complex composed of C (the catalyst) and A (the first substrate) 
.br
\fIK_diss\fP (>= 0) Cleavage kinetic constant (AB --> A + B) 
.br
\fIK_cpx\fP (>= 0) Complex formation kinetic constant (A + C(catalyst) --> C\&.A) 
.br
\fIK_cpxDiss\fP (>= 0) Complex Dissociation kinetic constant (C\&.A --> A + C) 
.br
\fIK_nrg\fP (>= 0) species phosphorilation kinetic constant 
.br
\fIK_nrg_decay\fP (>= 0) de-energization kinetic constant 
.br
\fImoleculeDecay_KineticConstant\fP (> 0) Molecule decay (efflux) kinetic Constant (Disregarded if the system is closed) 
.br
\fIK_spont_ass\fP (>= 0) If spontaneous reactions are turned on this is the default kinetic rate for spontanoues condensations 
.br
\fIK_spont_diss\fP (>= 0) If spontaneous reactions are turned on this is the default kinetic rate for spontanoues cleavages 
.br
\fIinflux_rate\fP (>= 0) Concentration per seconds (The species to insert in the system will be randomly chosen according to the _acsinflux\&.csv file)\&. If equal to 0 the system is closed (maxLOut=0) or only the species that can cross the membrane come in and go out (maxLOut>0)\&. 
.br
\fImaxLOut\fP Maximum length of the species involved in the efflux process (\fCinflux_rate\fP > 0), equal to 0 indicates that all the species can be involved in the efflux process (no filter)\&. If influx_rate = 0 the parameter indicates the species that can cross the semipermeable membrane of the protocell\&. \fBTHE COUPLING BETWEEN INFLUX_RATE AND MAXLOUT INDICATES IF WE ARE SIMULATING A PROTOCELL OR A FLOW REACTOR (CSTR)\fP:
.IP "\(bu" 2
influx_rate > 0 & maxLOut > 0 :: \fBFILTERED SYSTEM\fP: Deterministic simulation of the flux with a filter for the species with length up to maxLOut
.IP "\(bu" 2
influx_rate = 0 & maxLOut > 0 :: \fBPROTOCELL\fP: Flux is not simulated, concentration of the species with length up to maxLOut are buffered
.IP "\(bu" 2
influx_rate > 0 & maxLOut = 0 :: \fBCSTR\fP: Deterministic simulation of the flux, _acsinflux\&.csv species enter and all the species, according to their concentrations, can leave the system
.IP "\(bu" 2
influx_rate = 0 & maxLOut = 0 :: \fBCLOSE SYSTEM\fP
.PP
.br
\fIdiffusion_contribute\fP (KD) (0 or 0\&.5) if set to 0\&.5 the speed of molecules goes with the inverse of the square of the length, L^{-KD} 
.br
\fIsolubility_threshold\fP (> 0) Solubility Threshold, all the species longer than solubility_threshold precipitate
.RE
.PP

.br

.br
 
.SH "Acknowledgments"
.PP
.PP
.IP "\(bu" 2
European Centre for Living Technology http://www.ecltech.org/
.IP "\(bu" 2
Fondazione Venezia http://www.fondazionevenezia.it
.IP "\(bu" 2
University of Bologna, Interdepartment of industrial research (C\&.I\&.R\&.I)
.IP "\(bu" 2
Alex Graudenzi to take care of the initilizator\&.
.IP "\(bu" 2
Chiara Damiani to contribute to the development of the software\&.
.IP "\(bu" 2
Roberto Serra, Marco Villani, Timoteo Carletti, Davide De Lucrezia, Norman Packard, Ruedi Fuchslin, Andrea Roli and Stuart Kauffman for the essential hints\&.
.IP "\(bu" 2
http://www.bedaux.net/mtrand/ for the pseudo-random Marseinne-Twister library for C++\&.
.IP "\(bu" 2
http://perso.wanadoo.es/antlarr/otherapps.html for the poisson distribution generator numbers (acs_longInt \fBrandom_poisson(acs_double tmpLambda, MTRand& tmpRandomGenerator)\fP)\&. 
.PP

