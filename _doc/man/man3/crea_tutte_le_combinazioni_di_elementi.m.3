.TH "/Users/alessandrofilisetti/Documents/GIT/carness/_matlabinitializator/crea_tutte_le_combinazioni_di_elementi.m" 3 "Thu Sep 19 2013" "Version 4.5 (20130919.57)" "CaRNeSS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/alessandrofilisetti/Documents/GIT/carness/_matlabinitializator/crea_tutte_le_combinazioni_di_elementi.m \- 
.SH SYNOPSIS
.br
.PP
.SS "Variables"

.in +1c
.ti -1c
.RI "prova m \fBfunction\fP [specie]"
.br
.ti -1c
.RI "\fBnumero_elementi\fP = length(vettore_elementi)"
.br
.ti -1c
.RI "\fBrighe\fP = \fBnumero_elementi\fP^lunghezza_stringa"
.br
.ti -1c
.RI "for \fBi\fP"
.br
.in -1c
.SH "Variable Documentation"
.PP 
.SS "prova m function[specie]"
\fBInitial value:\fP
.PP
.nf
=crea_tutte_le_combinazioni_di_elementi(vettore_elementi,K)
%function [specie]=crea_tutte_le_combinazioni_di_elementi(vettore_elementi)

%dato un vettore di elementi e una lunghezza massima K restituisce tutte le
%possibili combinazioni di elementi ordinati

lunghezza_stringa = K
.fi
.PP
Definition at line 4 of file crea_tutte_le_combinazioni_di_elementi\&.m\&.
.SS "for i"
\fBInitial value:\fP
.PP
.nf
=1:lunghezza_stringa %colonne
   for j = 1:numero_elementi
       for z = (numero_elementi^(i-1))*(j-1)+1:numero_elementi^(i):righe
           specie(z:z+numero_elementi^(i-1)-1,i)=(vettore_elementi(j))
.fi
.PP
Definition at line 14 of file crea_tutte_le_combinazioni_di_elementi\&.m\&.
.SS "numero_elementi = length(vettore_elementi)"

.PP
Definition at line 11 of file crea_tutte_le_combinazioni_di_elementi\&.m\&.
.SS "righe = \fBnumero_elementi\fP^lunghezza_stringa"

.PP
Definition at line 12 of file crea_tutte_le_combinazioni_di_elementi\&.m\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CaRNeSS from the source code\&.
