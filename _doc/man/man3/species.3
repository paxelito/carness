.TH "species" 3 "Tue Dec 10 2013" "Version 4.8 (20131209.62)" "CaRNeSS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
species \- 
.PP
This class contains declarations of the species class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <species\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBspecies\fP ()"
.br
.RI "\fI< New species constructor (IN AMOUNT) \fP"
.ti -1c
.RI "\fBspecies\fP (\fBacs_longInt\fP tmpID, string tmpSequence, \fBacs_longInt\fP tmpAmount, \fBacs_double\fP tmpDiffusionEnh, \fBacs_int\fP tmpSoluble, \fBacs_double\fP tmpComplexDegEnh, \fBacs_int\fP tmpComplexCuttingPoint, \fBacs_int\fP tmpEvalueted, \fBacs_double\fP tmpVolume, \fBacs_double\fP tmpK_phospho, \fBacs_int\fP tmpEnergizable, \fBacs_double\fP tmpInflux_rate, \fBacs_int\fP tmpMaxLOut)"
.br
.RI "\fINew species constructor (IN CONCENTRATION) \fP"
.ti -1c
.RI "\fBspecies\fP (\fBacs_longInt\fP tmpID, string tmpSequence, \fBacs_double\fP tmpConcentration, \fBacs_double\fP tmpDiffusionEnh, \fBacs_int\fP tmpSoluble, \fBacs_double\fP tmpComplexDegEnh, \fBacs_int\fP tmpComplexCuttingPoint, \fBacs_int\fP tmpEvalueted, \fBacs_double\fP tmpVolume, \fBacs_double\fP tmpK_phospho, \fBacs_int\fP tmpEnergizable, \fBacs_double\fP tmpInflux_rate, \fBacs_int\fP tmpMaxLOut)"
.br
.RI "\fINew species constructor in case of species structure file upload (IN AMOUNT) \fP"
.ti -1c
.RI "\fBspecies\fP (\fBacs_longInt\fP tmpID, string tmpSequence, \fBacs_longInt\fP tmpAmount, \fBacs_double\fP tmpDiffusionEnh, \fBacs_int\fP tmpSoluble, \fBacs_double\fP tmpComplexDegEnh, \fBacs_int\fP tmpComplexCuttingPoint, \fBacs_int\fP tmpEvalueted, \fBacs_double\fP tmpAge, \fBacs_int\fP tmpReborns, \fBacs_double\fP tmpVolume, \fBacs_longInt\fP tmpNotUsedCatID, \fBacs_longInt\fP tmpNotUsedSubID, \fBacs_double\fP tmpK_phospho, \fBacs_int\fP tmpEnergizable, \fBacs_double\fP tmpInflux_rate, \fBacs_int\fP tmpMaxLOut)"
.br
.RI "\fINew species constructor in case of species structure file upload (IN CONCENTRATION) \fP"
.ti -1c
.RI "\fBspecies\fP (\fBacs_longInt\fP tmpID, string tmpSequence, \fBacs_double\fP tmpConcentration, \fBacs_double\fP tmpDiffusionEnh, \fBacs_int\fP tmpSoluble, \fBacs_double\fP tmpComplexDegEnh, \fBacs_int\fP tmpComplexCuttingPoint, \fBacs_int\fP tmpEvalueted, \fBacs_double\fP tmpAge, \fBacs_int\fP tmpReborns, \fBacs_double\fP tmpVolume, \fBacs_longInt\fP tmpNotUsedCatID, \fBacs_longInt\fP tmpNotUsedSubID, \fBacs_double\fP tmpK_phospho, \fBacs_double\fP tmpKLoadConc, \fBacs_int\fP tmpEnergizable, \fBacs_double\fP tmpInflux_rate, \fBacs_int\fP tmpMaxLOut)"
.br
.RI "\fINew random species constructor\&. \fP"
.ti -1c
.RI "\fBspecies\fP (\fBacs_longInt\fP tmpID, string tmpSequence, \fBacs_longInt\fP tmpAmount, \fBacs_double\fP tmpDiffusionEnh, \fBacs_int\fP tmpSoluble, \fBacs_double\fP tmpComplexProb, \fBacs_double\fP tmpMaxComplexDegKinetic, \fBMTRand\fP &tmp_RandomGenerator, \fBacs_double\fP tmpVolume, \fBacs_double\fP tmpK_phospho, \fBacs_int\fP tmpEnergizable)"
.br
.RI "\fInew Complex species constructor \fP"
.ti -1c
.RI "\fBspecies\fP (\fBacs_longInt\fP tmpID, string tmpSequence, \fBacs_double\fP tmpDiffusionEnh, \fBacs_int\fP tmpSoluble, \fBacs_double\fP tmpMaxComplexDegKinetic, \fBacs_int\fP tmpCuttingPoint, \fBMTRand\fP &tmp_RandomGenerator, \fBacs_longInt\fP tmpCatalyst_ID, \fBacs_longInt\fP tmpSubstrate_ID, \fBacs_double\fP tmpVolume, \fBacs_double\fP tmpK_phospho, \fBacs_int\fP tmpEnergizable)"
.br
.RI "\fIThis constructor is used to create a molecular complex\&. \fP"
.ti -1c
.RI "\fB~species\fP ()"
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetID\fP () const "
.br
.ti -1c
.RI "string \fBgetSequence\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetSequenceLength\fP () const "
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetAmount\fP () const "
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetNOTchargeMols\fP () const "
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetChargeMols\fP () const "
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetConcentration\fP () const "
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetLoadedConcentration\fP (\fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetAge\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetReborns\fP () const "
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetDiffusionEnh\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetSolubility\fP () const "
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetComplexDegEnh\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetComplexCutPnt\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetEvaluated\fP () const "
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetCatalyst_ID\fP () const "
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetSubstrate_ID\fP () const "
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetK_phospho\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetEnergizable\fP () const "
.br
.ti -1c
.RI "bool \fBgetConcentrationFixed\fP () const "
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetFirstConcentration\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetLastSpeciesEvaluated\fP () const "
.br
.ti -1c
.RI "vector< \fBacs_longInt\fP > \fBgetSecSubList\fP () const "
.br
.ti -1c
.RI "vector< \fBacs_double\fP > \fBgetSec_k_SubList\fP () const "
.br
.ti -1c
.RI "vector< \fBacs_longInt\fP > \fBgetCatalysisIfCpx\fP () const "
.br
.ti -1c
.RI "\fBacs_int\fP \fBgetSecSubListSize\fP () const "
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetSecSubListID\fP (\fBacs_int\fP tmpID) const "
.br
.ti -1c
.RI "\fBacs_double\fP \fBgetSec_k_SubListID\fP (\fBacs_int\fP tmpID) const "
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetCatalysisIfCpxID\fP (\fBacs_int\fP tmpID) const "
.br
.ti -1c
.RI "void \fBincrement\fP (\fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "void \fBspecificIncrement\fP (\fBacs_int\fP tmpIncrement, \fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "void \fBsetAmount\fP (\fBacs_int\fP tmpAmount, \fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "void \fBsetConcentration\fP (\fBacs_double\fP tmpConc, \fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "void \fBdecrement\fP (\fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "bool \fBsetChargeMols\fP (\fBacs_int\fP tmpMolsToCharge)"
.br
.ti -1c
.RI "bool \fBsetSpecificChargeMols\fP (\fBacs_int\fP tmpMolsToCharge)"
.br
.ti -1c
.RI "bool \fBchargeMol\fP ()"
.br
.ti -1c
.RI "bool \fBunchargeMol\fP ()"
.br
.ti -1c
.RI "void \fBsetEvaluated\fP ()"
.br
.ti -1c
.RI "void \fBsetDiffusion\fP (\fBacs_double\fP tmpDiff)"
.br
.ti -1c
.RI "void \fBsetSolubility\fP (\fBacs_int\fP tmpSol)"
.br
.ti -1c
.RI "void \fBsetKphospho\fP (\fBacs_double\fP tmpKphospho)"
.br
.ti -1c
.RI "void \fBsetNewAge\fP (\fBacs_double\fP tmpLastTimeInterval)"
.br
.ti -1c
.RI "void \fBrebornsIncrement\fP ()"
.br
.ti -1c
.RI "void \fBconcToNum\fP (\fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "void \fBnumToConc\fP (\fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "void \fBresetAge\fP ()"
.br
.ti -1c
.RI "void \fBresetReborns\fP ()"
.br
.ti -1c
.RI "void \fBresetToInitConc\fP (\fBacs_double\fP tmpVolume)"
.br
.ti -1c
.RI "void \fBsetLastSpeciesEvaluated\fP (\fBacs_int\fP tmpID)"
.br
.ti -1c
.RI "void \fBinsertSecSub\fP (\fBacs_longInt\fP tmpID, \fBacs_double\fP tmpK, \fBacs_longInt\fP tmpCat)"
.br
.ti -1c
.RI "void \fBinsertGillID\fP (\fBacs_longInt\fP tmpID)"
.br
.ti -1c
.RI "\fBacs_longInt\fP \fBgetGillIDpos\fP (\fBacs_longInt\fP tmpID) const "
.br
.ti -1c
.RI "void \fBshowGillEngagement\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class contains declarations of the species class\&. 

class species 
.PP
\fBAuthors:\fP
.RS 4
Alessandro Filisetti 
.RE
.PP
\fBVersion:\fP
.RS 4
1\&.1 questa modifica Ã¨ di prova per subversion
.RE
.PP
Created by Alessandro Filisetti on 19/02/09\&. Copyright 2009 European Centre for Living Technology\&. All rights reserved\&. Test paxelito SVN 
.PP
Definition at line 18 of file species\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "species::species ()"

.PP
< New species constructor (IN AMOUNT) This class containing the declaration of the species\&.
.PP
class species 
.PP
\fBAuthors:\fP
.RS 4
Alessandro Filisetti 
.RE
.PP
\fBVersion:\fP
.RS 4
0\&.1
.RE
.PP
Created by Alessandro Filisetti on 19/02/09\&. Copyright 2009 European Centre for Living Technology\&. All rights reserved\&.Default constructor 
.PP
Definition at line 16 of file species\&.cpp\&.
.SS "species::species (\fBacs_longInt\fPtmpID, stringtmpSequence, \fBacs_longInt\fPtmpAmount, \fBacs_double\fPtmpDiffusionEnh, \fBacs_int\fPtmpSoluble, \fBacs_double\fPtmpComplexDegEnh, \fBacs_int\fPtmpComplexCuttingPoint, \fBacs_int\fPtmpEvalueted, \fBacs_double\fPtmpVolume, \fBacs_double\fPtmpK_phospho, \fBacs_int\fPtmpEnergizable, \fBacs_double\fPtmpInflux_rate, \fBacs_int\fPtmpMaxLOut)"

.PP
New species constructor (IN CONCENTRATION) This constructor is used each time a new species is created (AMOUNT BASED)
.PP
\fBParameters:\fP
.RS 4
\fItmpID\fP species identificator 
.br
\fItmpSequence\fP species sequence (e\&.g\&. ABABAABABA) 
.br
\fItmpAmount\fP species initial amount 
.br
\fItmpDiffusionEnh\fP Diffusion enhancement degree 
.br
\fItmpSoluble\fP 1 if the species is soluble, 0 otherwise 
.br
\fItmpComplexDegEnh\fP complex dissociation kinetic constant 
.br
\fItmpComplexCuttingPoint\fP complex cutting point (catalyst-substrate) 
.br
\fItmpEvalueted\fP This parameter indicates whether the species has been already evalutad (i\&.e\&. all the catalysis of the species are instantiated) 
.br
\fItmpVolume\fP the volume is necessary to convert numbers in concentrations 
.br
\fItmpK_phospho\fP phosphorilation kinetic constant (in case of energy based simulations) 
.br
\fItmpEnergizable\fP this is a flag indicating whether or not the species is energizable 
.RE
.PP

.PP
Definition at line 53 of file species\&.cpp\&.
.SS "species::species (\fBacs_longInt\fPtmpID, stringtmpSequence, \fBacs_double\fPtmpConcentration, \fBacs_double\fPtmpDiffusionEnh, \fBacs_int\fPtmpSoluble, \fBacs_double\fPtmpComplexDegEnh, \fBacs_int\fPtmpComplexCuttingPoint, \fBacs_int\fPtmpEvalueted, \fBacs_double\fPtmpVolume, \fBacs_double\fPtmpK_phospho, \fBacs_int\fPtmpEnergizable, \fBacs_double\fPtmpInflux_rate, \fBacs_int\fPtmpMaxLOut)"

.PP
New species constructor in case of species structure file upload (IN AMOUNT) This constructor is used each time a new species is created (CONCENTRATION BASED)
.PP
\fBParameters:\fP
.RS 4
\fItmpID\fP species identificator 
.br
\fItmpSequence\fP species sequence (e\&.g\&. ABABAABABA) 
.br
\fItmpConcentration\fP species initial concentration 
.br
\fItmpDiffusionEnh\fP Diffusion enhancement degree 
.br
\fItmpSoluble\fP 1 if the species is soluble, 0 otherwise 
.br
\fItmpComplexDegEnh\fP complex dissociation kinetic constant 
.br
\fItmpComplexCuttingPoint\fP complex cutting point (catalyst-substrate) 
.br
\fItmpEvalueted\fP This parameter indicates whether the species has been already evalutad (i\&.e\&. all the catalysis of the species are instantiated) 
.br
\fItmpVolume\fP the volume is necessary to convert concentrations in numbers 
.br
\fItmpK_phospho\fP phosphorilation kinetic constant (in case of energy based simulations) 
.br
\fItmpEnergizable\fP this is a flag indicating whether or not the species is energizable 
.RE
.PP

.PP
Definition at line 99 of file species\&.cpp\&.
.SS "species::species (\fBacs_longInt\fPtmpID, stringtmpSequence, \fBacs_longInt\fPtmpAmount, \fBacs_double\fPtmpDiffusionEnh, \fBacs_int\fPtmpSoluble, \fBacs_double\fPtmpComplexDegEnh, \fBacs_int\fPtmpComplexCuttingPoint, \fBacs_int\fPtmpEvalueted, \fBacs_double\fPtmpAge, \fBacs_int\fPtmpReborns, \fBacs_double\fPtmpVolume, \fBacs_longInt\fPtmpNotUsedCatID, \fBacs_longInt\fPtmpNotUsedSubID, \fBacs_double\fPtmpK_phospho, \fBacs_int\fPtmpEnergizable, \fBacs_double\fPtmpInflux_rate, \fBacs_int\fPtmpMaxLOut)"

.PP
New species constructor in case of species structure file upload (IN CONCENTRATION) This constructor is used when a new species is uploaded from file (TOTAL AMOUNT BASED)
.PP
\fBParameters:\fP
.RS 4
\fItmpID\fP species identificator 
.br
\fItmpSequence\fP species sequence (e\&.g\&. ABABAABABA) 
.br
\fItmpAmount\fP species initial amount of molecules 
.br
\fItmpReactions_constant\fP ???? 
.RE
.PP

.PP
Definition at line 138 of file species\&.cpp\&.
.SS "species::species (\fBacs_longInt\fPtmpID, stringtmpSequence, \fBacs_double\fPtmpConcentration, \fBacs_double\fPtmpDiffusionEnh, \fBacs_int\fPtmpSoluble, \fBacs_double\fPtmpComplexDegEnh, \fBacs_int\fPtmpComplexCuttingPoint, \fBacs_int\fPtmpEvalueted, \fBacs_double\fPtmpAge, \fBacs_int\fPtmpReborns, \fBacs_double\fPtmpVolume, \fBacs_longInt\fPtmpNotUsedCatID, \fBacs_longInt\fPtmpNotUsedSubID, \fBacs_double\fPtmpK_phospho, \fBacs_double\fPtmpKLoadConc, \fBacs_int\fPtmpEnergizable, \fBacs_double\fPtmpInflux_rate, \fBacs_int\fPtmpMaxLOut)"

.PP
New random species constructor\&. This constructor is used when a new species is uploaded from file (CONCENTRATION BASED)
.PP
\fBParameters:\fP
.RS 4
\fItmpID\fP species identificator 
.br
\fItmpSequence\fP species sequence (e\&.g\&. ABABAABABA) 
.br
\fItmpAmount\fP species initial amount of molecules 
.br
\fItmpReactions_constant\fP ???? 
.RE
.PP

.PP
Definition at line 180 of file species\&.cpp\&.
.SS "species::species (\fBacs_longInt\fPtmpID, stringtmpSequence, \fBacs_longInt\fPtmpAmount, \fBacs_double\fPtmpDiffusionEnh, \fBacs_int\fPtmpSoluble, \fBacs_double\fPtmpComplexProb, \fBacs_double\fPtmpMaxComplexDegKinetic, \fBMTRand\fP &tmp_RandomGenerator, \fBacs_double\fPtmpVolume, \fBacs_double\fPtmpK_phospho, \fBacs_int\fPtmpEnergizable)"

.PP
new Complex species constructor This constructor is used when a species is randomly created (!!! NOT USED NOW)
.PP
\fBVersion:\fP
.RS 4
0\&.1 (8 parameters) 
.RE
.PP
\fBParameters:\fP
.RS 4
\fItmpID\fP species identificator 
.br
\fItmpSequence\fP species sequence (e\&.g\&. ABABAABABA) 
.br
\fItmpAmount\fP species initial amount of molecules 
.br
\fIacs_double\fP tmpDiffusionEnh Diffusione enhancement parameter 
.br
\fIacs_double\fP tmpPrecipitationEnh Precipitation Enhancement parameters 
.br
\fIacs_double\fP tmpComplexProb Probability to be a complex 
.br
\fIacs_double\fP tmpMaxComplexDegKinetic max complex degradation constant 
.br
\fIMTRand&\fP tmp_RandomGenerator random generator 
.RE
.PP

.PP
Definition at line 228 of file species\&.cpp\&.
.SS "species::species (\fBacs_longInt\fPtmpID, stringtmpSequence, \fBacs_double\fPtmpDiffusionEnh, \fBacs_int\fPtmpSoluble, \fBacs_double\fPtmpMaxComplexDegKinetic, \fBacs_int\fPtmpCuttingPoint, \fBMTRand\fP &tmp_RandomGenerator, \fBacs_longInt\fPtmpCatalyst_ID, \fBacs_longInt\fPtmpSubstrate_ID, \fBacs_double\fPtmpVolume, \fBacs_double\fPtmpK_phospho, \fBacs_int\fPtmpEnergizable)"

.PP
This constructor is used to create a molecular complex\&. 
.PP
\fBVersion:\fP
.RS 4
0\&.1 (10 paramters) 
.RE
.PP
\fBParameters:\fP
.RS 4
\fItmpID\fP species identificator 
.br
\fItmpSequence\fP species sequence (e\&.g\&. ABABAABABA) 
.br
\fIacs_double\fP tmpDiffusionEnh Diffusione enhancement parameter 
.br
\fIacs_double\fP tmpPrecipitationEnh Precipitation Enhancement parameters 
.br
\fIacs_double\fP tmpComplexProb Probability to be a complex 
.br
\fIacs_double\fP tmpMaxComplexDegKinetic max complex degradation constant 
.br
\fIMTRand&\fP tmp_RandomGenerator random generator 
.br
\fIacs_int\fP tmpCatalyst_ID Catalyst ID 
.br
\fIacs_int\fP tmpSubstrate_ID substrate ID 
.RE
.PP

.PP
Definition at line 274 of file species\&.cpp\&.
.SS "species::~species ()\fC [inline]\fP"

.PP
Definition at line 83 of file species\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "bool species::chargeMol ()"
to charge molecules 
.PP
Definition at line 350 of file species\&.cpp\&.
.SS "void species::concToNum (\fBacs_double\fPtmpVolume)\fC [inline]\fP"

.PP
Definition at line 136 of file species\&.h\&.
.SS "void species::decrement (\fBacs_double\fPtmpVolume)"
Function to decrement the total number of molecules belonging to this species 
.PP
Definition at line 313 of file species\&.cpp\&.
.SS "\fBacs_double\fP species::getAge () const\fC [inline]\fP"

.PP
Definition at line 94 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getAmount () const\fC [inline]\fP"

.PP
Definition at line 89 of file species\&.h\&.
.SS "vector<\fBacs_longInt\fP> species::getCatalysisIfCpx () const\fC [inline]\fP"

.PP
Definition at line 110 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getCatalysisIfCpxID (\fBacs_int\fPtmpID) const\fC [inline]\fP"

.PP
Definition at line 114 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getCatalyst_ID () const\fC [inline]\fP"

.PP
Definition at line 101 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getChargeMols () const\fC [inline]\fP"

.PP
Definition at line 91 of file species\&.h\&.
.SS "\fBacs_int\fP species::getComplexCutPnt () const\fC [inline]\fP"

.PP
Definition at line 99 of file species\&.h\&.
.SS "\fBacs_double\fP species::getComplexDegEnh () const\fC [inline]\fP"

.PP
Definition at line 98 of file species\&.h\&.
.SS "\fBacs_double\fP species::getConcentration () const\fC [inline]\fP"

.PP
Definition at line 92 of file species\&.h\&.
.SS "bool species::getConcentrationFixed () const\fC [inline]\fP"

.PP
Definition at line 105 of file species\&.h\&.
.SS "\fBacs_double\fP species::getDiffusionEnh () const\fC [inline]\fP"

.PP
Definition at line 96 of file species\&.h\&.
.SS "\fBacs_int\fP species::getEnergizable () const\fC [inline]\fP"

.PP
Definition at line 104 of file species\&.h\&.
.SS "\fBacs_int\fP species::getEvaluated () const\fC [inline]\fP"

.PP
Definition at line 100 of file species\&.h\&.
.SS "\fBacs_double\fP species::getFirstConcentration () const\fC [inline]\fP"

.PP
Definition at line 106 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getGillIDpos (\fBacs_longInt\fPtmpID) const\fC [inline]\fP"

.PP
Definition at line 145 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getID () const\fC [inline]\fP"

.PP
Definition at line 86 of file species\&.h\&.
.SS "\fBacs_double\fP species::getK_phospho () const\fC [inline]\fP"

.PP
Definition at line 103 of file species\&.h\&.
.SS "\fBacs_int\fP species::getLastSpeciesEvaluated () const\fC [inline]\fP"

.PP
Definition at line 107 of file species\&.h\&.
.SS "\fBacs_double\fP species::getLoadedConcentration (\fBacs_double\fPtmpVolume)"
return the concentration of the loaded molecules 
.PP
Definition at line 377 of file species\&.cpp\&.
.SS "\fBacs_longInt\fP species::getNOTchargeMols () const\fC [inline]\fP"

.PP
Definition at line 90 of file species\&.h\&.
.SS "\fBacs_int\fP species::getReborns () const\fC [inline]\fP"

.PP
Definition at line 95 of file species\&.h\&.
.SS "vector<\fBacs_double\fP> species::getSec_k_SubList () const\fC [inline]\fP"

.PP
Definition at line 109 of file species\&.h\&.
.SS "\fBacs_double\fP species::getSec_k_SubListID (\fBacs_int\fPtmpID) const\fC [inline]\fP"

.PP
Definition at line 113 of file species\&.h\&.
.SS "vector<\fBacs_longInt\fP> species::getSecSubList () const\fC [inline]\fP"

.PP
Definition at line 108 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getSecSubListID (\fBacs_int\fPtmpID) const\fC [inline]\fP"

.PP
Definition at line 112 of file species\&.h\&.
.SS "\fBacs_int\fP species::getSecSubListSize () const\fC [inline]\fP"

.PP
Definition at line 111 of file species\&.h\&.
.SS "string species::getSequence () const\fC [inline]\fP"

.PP
Definition at line 87 of file species\&.h\&.
.SS "\fBacs_int\fP species::getSequenceLength () const\fC [inline]\fP"

.PP
Definition at line 88 of file species\&.h\&.
.SS "\fBacs_int\fP species::getSolubility () const\fC [inline]\fP"

.PP
Definition at line 97 of file species\&.h\&.
.SS "\fBacs_longInt\fP species::getSubstrate_ID () const\fC [inline]\fP"

.PP
Definition at line 102 of file species\&.h\&.
.SS "void species::increment (\fBacs_double\fPtmpVolume)"
Function to increment the total number of molecules belonging to this species 
.PP
Definition at line 302 of file species\&.cpp\&.
.SS "void species::insertGillID (\fBacs_longInt\fPtmpID)\fC [inline]\fP"

.PP
Definition at line 144 of file species\&.h\&.
.SS "void species::insertSecSub (\fBacs_longInt\fPtmpID, \fBacs_double\fPtmpK, \fBacs_longInt\fPtmpCat)"
to insert the second substrate - and k reaction - to the species (complexes list) 
.PP
Definition at line 386 of file species\&.cpp\&.
.SS "void species::numToConc (\fBacs_double\fPtmpVolume)\fC [inline]\fP"

.PP
Definition at line 137 of file species\&.h\&.
.SS "void species::rebornsIncrement ()\fC [inline]\fP"

.PP
Definition at line 134 of file species\&.h\&.
.SS "void species::resetAge ()\fC [inline]\fP"

.PP
Definition at line 139 of file species\&.h\&.
.SS "void species::resetReborns ()\fC [inline]\fP"

.PP
Definition at line 140 of file species\&.h\&.
.SS "void species::resetToInitConc (\fBacs_double\fPtmpVolume)\fC [inline]\fP"

.PP
Definition at line 141 of file species\&.h\&.
.SS "void species::setAmount (\fBacs_int\fPtmpAmount, \fBacs_double\fPtmpVolume)\fC [inline]\fP"

.PP
Definition at line 120 of file species\&.h\&.
.SS "bool species::setChargeMols (\fBacs_int\fPtmpMolsToCharge)"
to charge a specific number of molecules 
.PP
Definition at line 337 of file species\&.cpp\&.
.SS "void species::setConcentration (\fBacs_double\fPtmpConc, \fBacs_double\fPtmpVolume)\fC [inline]\fP"

.PP
Definition at line 121 of file species\&.h\&.
.SS "void species::setDiffusion (\fBacs_double\fPtmpDiff)\fC [inline]\fP"

.PP
Definition at line 130 of file species\&.h\&.
.SS "void species::setEvaluated ()\fC [inline]\fP"

.PP
Definition at line 129 of file species\&.h\&.
.SS "void species::setKphospho (\fBacs_double\fPtmpKphospho)\fC [inline]\fP"

.PP
Definition at line 132 of file species\&.h\&.
.SS "void species::setLastSpeciesEvaluated (\fBacs_int\fPtmpID)\fC [inline]\fP"

.PP
Definition at line 142 of file species\&.h\&.
.SS "void species::setNewAge (\fBacs_double\fPtmpLastTimeInterval)\fC [inline]\fP"

.PP
Definition at line 133 of file species\&.h\&.
.SS "void species::setSolubility (\fBacs_int\fPtmpSol)\fC [inline]\fP"

.PP
Definition at line 131 of file species\&.h\&.
.SS "bool species::setSpecificChargeMols (\fBacs_int\fPtmpMolsToCharge)"
to charge a specific number of molecules 
.PP
Definition at line 324 of file species\&.cpp\&.
.SS "void species::showGillEngagement ()"
Function to show the species gillespie engagement 
.PP
Definition at line 406 of file species\&.cpp\&.
.SS "void species::specificIncrement (\fBacs_int\fPtmpIncrement, \fBacs_double\fPtmpVolume)\fC [inline]\fP"

.PP
Definition at line 119 of file species\&.h\&.
.SS "bool species::unchargeMol ()"
to uncharge molecules 
.PP
Definition at line 365 of file species\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CaRNeSS from the source code\&.
