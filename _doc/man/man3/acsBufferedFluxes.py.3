.TH "/Users/alessandrofilisetti/Documents/GIT/carness/_analysis/underDevelopment/acsBufferedFluxes.py" 3 "Thu Dec 12 2013" "Version 4.8 (20131210.63)" "CaRNeSS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/alessandrofilisetti/Documents/GIT/carness/_analysis/underDevelopment/acsBufferedFluxes.py \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "\fBacsBufferedFluxes\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBacsBufferedFluxes\&.zeroBeforeStrNum\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.parser\fP"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.args\fP = parser\&.parse_args()"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.strPath\fP = os\&.path\&.abspath(args\&.strPath)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.tmpDirs\fP = sort(os\&.listdir(StrPath))"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&._CONDENSATION_\fP = 0"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&._CLEAVAGE_\fP = 1"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&._ENDOCONDENSATION_\fP = 7"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&._ENDOCLEAVAGE_\fP = 6"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&._SPONTCONDENSATION_\fP = 10"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&._SPONTCLEAVAGE_\fP = 11"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&.chemistry\fP = 1"
.br
.ti -1c
.RI "string \fBacsBufferedFluxes\&.ndn\fP = '_0_new_allStatResults'"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.newdirAllResults\fP = os\&.path\&.join(StrPath, ndn)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.totDirName\fP = os\&.path\&.join(StrPath,tmpDir)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.resDirPath\fP = os\&.path\&.abspath(os\&.path\&.join('\&./', 'res'))"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.numberOfGen\fP = len(glob\&.glob(os\&.path\&.join(resDirPath,'times_*')))"
.br
.ti -1c
.RI "string \fBacsBufferedFluxes\&.tmpFluxFile\fP = 'fluxDynamics_'"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.tmpSpeciesStatsSummaryNameFID\fP = open(tmpFluxFile, 'w')"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.strZeros\fP = zeroBeforeStrNum(ngen, numberOfGen)"
.br
.ti -1c
.RI "string \fBacsBufferedFluxes\&.strSpeciesZero\fP = 'species_'"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.speciesFilesZero\fP = sorted(glob\&.glob(os\&.path\&.join(resDirPath,strSpeciesZero)))"
.br
.ti -1c
.RI "string \fBacsBufferedFluxes\&.strSpecies\fP = 'species_'"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.speciesFiles\fP = sorted(glob\&.glob(os\&.path\&.join(resDirPath,strSpecies)))"
.br
.ti -1c
.RI "list \fBacsBufferedFluxes\&.lastfilespecies\fP = \fBspeciesFiles\fP[-1]"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.fidSpecies\fP = open(lastfilespecies, '\fBr\fP')"
.br
.ti -1c
.RI "list \fBacsBufferedFluxes\&.flux_seq\fP = []"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.counters\fP = np\&.zeros((nSpecies,(len(seq)*2)+7))"
.br
.ti -1c
.RI "string \fBacsBufferedFluxes\&.strRctPar\fP = 'reactions_parameters_'"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.fidRctPar\fP = open(strRctPar, '\fBr\fP')"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&.totIN\fP = 0"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&.totOUT\fP = 0"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&.deltaIO\fP = 0"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&.totBIN\fP = 0"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&.totBOUT\fP = 0"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.rctTime\fP = int(tmpRctT)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.rctType\fP = int(tmpRctType)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.cat\fP = int(tmpCat)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.S1\fP = int(tmpS1)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.S2\fP = int(tmpS2)"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.S3\fP = int(tmpS3)"
.br
.ti -1c
.RI "string \fBacsBufferedFluxes\&.tmpFileName\fP = 'speciesStats_'"
.br
.ti -1c
.RI "tuple \fBacsBufferedFluxes\&.tmpFileNameFID\fP = open(tmpFileName, 'w')"
.br
.ti -1c
.RI "int \fBacsBufferedFluxes\&.ID\fP = 0"
.br
.ti -1c
.RI "string \fBacsBufferedFluxes\&.tmpStr\fP = 'Total Number of Reactions\\t\\t\\t\\t'"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for CaRNeSS from the source code\&.
